#ifdef HX_WII
#define STORE_PART_SYMBOLS
(band guitar drum vocals bass)
#endif
{new
   SongSyncPanel
   song_sync_panel
   #ifdef HX_WII
   (exit
      {$this disk_error FALSE})
   #endif}
#define SONG_PART_SYMBOLS
(drum guitar bass vocals band)
{new
   UIPanel
   song_select_lower3rd_panel
   (file
      "song_select_lower3rd.milo")}
{new
   UIPanel
   song_select_details_panel
   (file
      "song_select_details.milo")
   (enter
      {if {is_leader_local} {session send_msg_to_all {` (set $speedmod {, $leaderspeed}) kNetReliable}}}
	  {set $speedmod $leaderspeed}
      {loading.mnm
         animate
         (loop)})
   (init_setlist_mode
      {if_else
         {song_offer_provider get_setlist_mode}
         {do
            {setlist.lst
               set_provider
               {song_offer_provider get setlist_provider}}
            {setlist.lst
               set_selected
               {meta_performer next_any_index}}
            {album_art.pic set_hook_tex FALSE}
            {album.mat set diffuse_tex song_setlist_render.tex}
            {album.mesh set_showing TRUE}}
         {do
            {album_art.pic set_hook_tex TRUE}
            {setlist.lst
               set_selected
               {meta_performer next_any_index}}}})
   (refresh_setlist
      {setlist.lst set_dirty}
      {setlist.lst
         set_selected
         {meta_performer next_any_index}})
   (refresh_details
      ($offer_ix)
      {$this refresh_top $offer_ix}
      {$this refresh_bottom $offer_ix})
   (refresh_top
      ($offer_ix)
      {if
         {!
            {song_offer_provider get_setlist_mode}}
         {do
            ($song
               {song_offer_provider data_symbol $offer_ix})
            {if_else
               {song_offer_provider is_song $offer_ix}
               {do
                  ($offer
                     {song_offer_provider get_song_offer $offer_ix})
                  {if_else
                     {&&
                        {$offer has_data album_art}
                        {$offer
                           get_data
                           (album_art)}}
                     {if_else
                        {song_mgr is_song_mounted $song}
                        {album_art.pic
                           set
                           tex_file
                           {$offer album_art_path}}
                        {album_art.pic
                           set
                           tex_file
                           "ui/image/blank_album_art_keep_nomip.png"}}
                     {album_art.pic
                        set
                        tex_file
                        "ui/image/blank_album_art_keep_nomip.png"}}}
               {cond
                  ({'||'
                        {== make_a_setlist $song}
                        {== play_setlist $song}}
                     {album_art.pic
                        set
                        tex_file
                        "fusion/ui/textures/song_select_setlist_keep_nomip.png"})
                  ({== random_song $song}
                     {album_art.pic
                        set
                        tex_file
                        "fusion/ui/textures/song_select_random_keep_nomip.png"})
                  ({song_offer_provider is_subheader $offer_ix}
                     {$this
                        refresh_top
                        {'+' 1 $offer_ix}})
                  (TRUE
                     {album_art.pic
                        set
                        tex_file
                        "fusion/ui/textures/song_select_header_keep_nomip.png"})}}}})
   (song_data_mounted
      ($song)
      {if
         {!
            {song_offer_provider get_setlist_mode}}
         {do
            ($offer_ix
               {song_offer_provider data_index $song})
            ($offer
               {song_offer_provider get_song_offer $offer_ix})
            {if_else
               {&&
                  {$offer has_data album_art}
                  {$offer
                     get_data
                     (album_art)}}
               {album_art.pic
                  set
                  tex_file
                  {$offer album_art_path}}
               {album_art.pic
                  set
                  tex_file
                  "ui/image/blank_album_art_keep.png"}}}})
   (refresh_bottom
      ($offer_ix)
      {if_else
         {song_offer_provider is_song $offer_ix}
         {do
            ($offer
               {song_offer_provider get_song_offer $offer_ix})
            {details.grp set_showing TRUE}
            {details_header.grp set_showing FALSE}
            {details_subheader.grp set_showing FALSE}
            {details_function.grp set_showing FALSE}
            {if_else
               {$offer is_cover}
               {do
                  {band_name.lbl
                     set_localized
                     ""}
                  {band_famousby.lbl set text_token store_famous_by}
                  {band_famousby_name.lbl
                     set_localized
                     {$offer artist}}}
               {do
                  {band_name.lbl
                     set_localized
                     {$offer artist}}
                  {band_famousby.lbl
                     set_localized
                     ""}
                  {band_famousby_name.lbl
                     set_localized
                     ""}}}
            {if_else
               {&&
                  {$offer has_data album_name}
                  {!
                     {$offer is_cover}}}
               {album.lbl
                  set_localized
                  {$offer
                     get_data
                     (album_name)}}
               {album.lbl
                  set_localized
                  ""}}
            {if_else
               {$offer has_data year_released}
               {year.lbl
                  set_localized
                  {sprint
                     {$offer year_released}}}
               {do
                  {printf
                     "The song %s is missing year_released data."
                     {$offer short_name}}
                  {year.lbl
                     set_localized
                     ""}}}
            {genre.lbl
               set
               text_token
               {$offer
                  get_data
                  (genre)}}
            {foreach
               $part
               (STORE_PART_SYMBOLS)
               {do
                  ($tier
                     {song_mgr
                        rank_tier
                        {$offer
                           get_data
                           (rank $part)}
                        $part})
                  ($max_buttons
                     {-
                        {song_mgr num_rank_tiers $part}
                        1})
                  {foreach_int
                     $r
                     1
                     $max_buttons
                     {{sprintf
                           "diff_%s%i.mesh"
                           $part
                           $r}
                        set_mat
                        {if_else
                           {<= $r $tier}
                           {if_else
                              {== $tier 6}
                              diff_button_skull.mat
                              diff_button_on.mat}
                           diff_button_off.mat}}}}}
            {foreach
               $track
               (SONG_PART_SYMBOLS)
               {unless
                  {== $track band}
                  {do
                     ($ranks
                        {sprintf
                           "%s_buttons.grp"
                           $track})
                     ($no_part
                        {sprintf
                           "no_%s.lbl"
                           $track})
                     ($has_part
                        {$offer
                           get_data
                           (rank $track)})
                     {$ranks set_showing $has_part}
                     {$no_part
                        set_showing
                        {! $has_part}}}}}}
         {if_else
            {song_offer_provider is_header $offer_ix}
            {if_else
               {song_offer_provider is_subheader $offer_ix}
               {do
                  ($offer
                     {song_offer_provider
                        get_song_offer
                        {'+' 1 $offer_ix}})
                  {details.grp set_showing FALSE}
                  {details_header.grp set_showing FALSE}
                  {details_subheader.grp set_showing TRUE}
                  {details_function.grp set_showing FALSE}
                  {subheader_name.lbl
                     set
                     text_token
                     {song_offer_provider data_symbol $offer_ix}}
                  {subheader_artist.lbl
                     set_localized
                     {$offer artist}}
                  {subheader_year.lbl
                     set_localized
                     {sprint
                        {$offer year_released}}}
                  {subheader_song_count.lbl
                     set_localized
                     {sprintf
                        {localize song_select_song_count}
                        {song_offer_provider get_header_song_count $offer_ix}}}}
               {do
                  {details.grp set_showing FALSE}
                  {details_header.grp set_showing TRUE}
                  {details_subheader.grp set_showing FALSE}
                  {details_function.grp set_showing FALSE}
                  {header_name.lbl
                     set
                     text_token
                     {song_offer_provider data_symbol $offer_ix}}
                  {song_count.lbl
                     set_localized
                     {sprintf
                        {localize song_select_song_count}
                        {song_offer_provider get_header_song_count $offer_ix}}}
                  #ifdef HX_WII
                  {disc_song_count.lbl
                     set_localized
                     ""}
                  {download_song_count.lbl
                     set_localized
                     ""}
                  #else
                  {disc_song_count.lbl
                     set_localized
                     {sprintf
                        {localize song_select_disc_song_count}
                        {song_offer_provider get_header_disc_song_count $offer_ix}}}
                  {download_song_count.lbl
                     set_localized
                     {sprintf
                        {localize song_select_download_song_count}
                        {song_offer_provider get_header_download_song_count $offer_ix}}}
                  #endif}}
            {do
               {details.grp set_showing FALSE}
               {details_header.grp set_showing FALSE}
               {details_subheader.grp set_showing FALSE}
               {details_function.grp set_showing TRUE}
               {function_name.lbl
                  set
                  text_token
                  {song_offer_provider data_symbol $offer_ix}}
               {function_description.lbl
                  set
                  text_token
                  {switch
                     {song_offer_provider data_symbol $offer_ix}
                     ((make_a_setlist)
                        make_a_setlist_by_line)
                     ((load_setlist)
                        load_saved_setlist)
                     ((play_setlist)
                        play_setlist_by_line)
                     ((random_song)
                        random_song_by_line)
                     ((career)
                        career_by_line)}}}}})
   (shortcut_period 1.5)
   (shortcut_selected '')
   (shortcut_mode none)
   (shortcut_enter
      ($mode)
      {if
         {==
            none
            [shortcut_mode]}
         {set
            [shortcut_mode]
            $mode}
         {{ui current_screen}
            set_focus_panel
            song_select_details_panel}
         {synth play button_select}
         {shortcut_off.grp stop_animation}
         {shortcut_on.grp
            animate
            (period
               [shortcut_period])}
         {helpbar
            set_config
            ((cancel helpbar_back)
               (confirm helpbar_select))}
         {with
            song_select_panel
            {song.lst set_state kComponentNormal}}
         {do
            ($shortcut_list
               {song_select_shortcut find group.lst})
            {if_else
               {==
                  [shortcut_mode]
                  groups}
               {do
                  {$shortcut_list
                     set_provider
                     {song_offer_provider get group_provider}}
                  {$shortcut_list
                     set_selected
                     {song_offer_provider
                        get_current_shortcut
                        {{song_select_panel find song.lst}
                           selected_pos}}}}
               {do
                  {$shortcut_list
                     set_provider
                     {song_offer_provider get sort_provider}}
                  {$shortcut_list
                     set_selected
                     {song_offer_provider current_sort}}}}
            {set
               [shortcut_selected]
               {$shortcut_list selected_pos}}}})
   (shortcut_exit
      {if
         {!=
            [shortcut_mode]
            none}
         {{ui current_screen}
            set_focus_panel
            song_select_panel}
         {with
            song_select_panel
            {song.lst set_state kComponentFocused}}
         {shortcut_off.grp
            animate
            (period
               [shortcut_period])}
         {song_select_panel update_helpbar}
         {set
            [shortcut_mode]
            none}})
   (BUTTON_DOWN_MSG
      {if_else
         {== $action kAction_Cancel}
         {do
            {synth play button_back}
            {$this shortcut_exit}}
         {with
            song_select_shortcut
            {handle
               (group.lst
                  button_down
                  $player_num
                  $player
                  $raw_button
                  {if_else
                     {== $action kAction_Start}
                     kAction_Confirm
                     $action})}}})
   #ifndef HX_WII
   (BUTTON_UP_MSG
      {if_else
         {'||'
            {&&
               {==
                  groups
                  [shortcut_mode]}
               {== $action kAction_Option}}
            {&&
               {==
                  sorts
                  [shortcut_mode]}
               {== $action kAction_ViewModify}}}
         {$this on_select}
         kDataUnhandled})
   #else
   (BUTTON_UP_MSG
      {if_else
         {'||'
            {&&
               {==
                  groups
                  [shortcut_mode]}
               {'||'
                  {== $action kAction_Option}
                  {== $action kAction_Option1}}}
            {&&
               {==
                  sorts
                  [shortcut_mode]}
               {== $action kAction_ViewModify}}}
         {$this on_select}
         kDataUnhandled})
   #endif
   (SELECT_MSG
      {$this on_select})
   (on_select
      {if_else
         {==
            [shortcut_mode]
            groups}
         {with
            song_select_shortcut
            {song_offer_provider
               set_highlighted_ix
               {song_offer_provider
                  shortcut_to_selectable_pos
                  {group.lst selected_sym}}}
            {song_select_panel sync_song}
            {song_select_panel refresh_selected_song}}
         {with
            song_select_shortcut
            {song_offer_provider
               set_sort
               {group.lst selected_sym}}
            {song_select_panel sync_sort_method}
            {song_offer_provider init_highlight}
            {song_select_panel sync_song}
            {song_select_panel refresh_selected_song}}}
      {$this shortcut_exit})
   (sync_shortcut)
   (SCROLL_MSG
      {synth play button_focus}
      {set
         [shortcut_selected]
         {{song_select_shortcut find group.lst}
            selected_pos}}
      {$this sync_shortcut})
   (JOYPAD_CONNECT_MSG
      {if
         {! $connected}
         {$this shortcut_exit}})
   (remote_set_shortcut
      ($pos)
      {if
         {!= song_select_shortcut 0}
         {do
            ($list
               {song_select_shortcut find group.lst})
            {$list set_selected_simulate_scroll $pos}}})}
{new
   HeldButtonPanel
   song_select_panel
   (file
      "song_select.milo")
   (focus song.lst)
   (held_buttons
      (kAction_Option 0.25)
      #ifdef HX_WII
      (kAction_Option1 0.25)
      #endif
      (kAction_Confirm
         {if_else
            {&&
               {song_offer_provider are_headers_selectable}
               {!
                  {song_offer_provider get_setlist_mode}}}
            1.5
            -1.0}))
   (force_exit
      {==
         {gamemode get song_select_mode}
         song_select_tour})
   (joypad
      (hold_ms 100)
      (repeat_ms 80))
   (song_data_mounted
      ($song)
      {song_select_details_panel song_data_mounted $song})
   (check_setlist TRUE)
   (last_preview_play 0.0)
   (preview_playing FALSE)
   (tmp_ix 0)
   (show_warning FALSE)
   (clear_setlist FALSE)
   (saved_setlist FALSE)
   (enter
      #ifdef KIOSK_DEMO
      {if
         {exists sort.lbl}
         {sort.lbl set_showing FALSE}}
      {if
         {exists sort_title.lbl}
         {sort_title.lbl set_showing FALSE}}
      {if
         {exists sorting_back_button.lbl}
         {sorting_back_button.lbl set_showing FALSE}}
      #endif
      {if
         {==
            {gamemode get song_select_mode}
            song_select_quickplay}
         {user_mgr load_slots}}
      {user.lbl
         set_localized
         ""}
      {if_else
         {song_offer_provider get is_leaderboards}
         {song_mgr reset_shared_songs}
         {do
            ($user
               {meta_performer song_select_user})
            {input_mgr set_limit kLimitUILeaderNoSwap}
            {if
               $user
               {meta_performer set_song_select_sync TRUE}
               {input_mgr set_user $user}}}}
      {platform_mgr
         add_sink
         $this
         (storage_changed)}
      {meta music_stop}
      {platform_mgr disable_xmp}
      {if
         [check_setlist]
         {if_else
            {song_offer_provider get_setlist_mode}
            {if
               {!=
                  -1
                  {meta_performer previous_song_selection}}
               {set
                  [show_warning]
                  TRUE}}
            {if_else
               {gamemode get_practice}
               {do
                  {meta_performer reset_songs}
                  {$this on_change_setlist_mode}}
               {if_else
                  {==
                     {gamemode get song_select_mode}
                     song_select_tour}
                  {if
                     {!
                        {song_offer_provider get is_leaderboards}}
                     {do
                        ($normal_gig
                           {{tour band}
                              gig})
                        ($special_gig
                           {{tour band}
                              special_gig})
                        ($gig
                           {cond
                              ($normal_gig $normal_gig)
                              ($special_gig $special_gig)})
                        {if_else
                           {>
                              {$gig num_songs}
                              1}
                           {song_offer_provider set_setlist_mode TRUE}
                           {song_offer_provider set_setlist_mode FALSE}}}}
                  {meta_performer reset_songs}}}}}
      {$this refresh}
      {$this sync_setlist_mode}
      {song_select_details_panel init_setlist_mode}
      {if
         {!
            [show_warning]}
         {$this sync_sort_method}
         {song_offer_provider init_highlight}
         {$this sync_song}
         {$this refresh_selected_song}})
   (exit
      {meta_performer set_song_select_sync FALSE}
      {if
         {!
            {song_offer_provider get is_leaderboards}}
         {input_mgr set_user ''}}
      {song_select_details_panel shortcut_exit}
      {platform_mgr remove_sink $this storage_changed}
      {platform_mgr enable_xmp}
      #ifdef HX_EE
      {meta music_stop_stream}
      {script_task
         kTaskSeconds
         (delay
            {'+'
               {{meta meta_music}
                  fade_time}
               0.1})
         (script
            {meta music_start})}
      #else
      {song_offer_provider play_preview -1}
      {set
         [last_preview_play]
         0.0}
      {set
         [tmp_ix]
         0}
      #endif)
   (unload
      {song_offer_provider unload}
      {song_offer_provider set is_leaderboards FALSE})
   (is_user_local
      {do
         ($user
            {meta_performer song_select_user})
         {if_else
            $user
            {$user is_local_player}
            {is_leader_local}}})
   (TRANSITION_COMPLETE_MSG
      {set
         [check_setlist]
         TRUE}
      {$this update_helpbar}
      #ifdef KIOSK_DEMO
      {$this refresh_selected_song}
      #endif
      {if_else
         [clear_setlist]
         {do
            {do_clear_setlist}
            {set
               [clear_setlist]
               FALSE}}
         {do
            {if_else
               {'||'
                  {==
                     {gamemode get is_tour}
                     FALSE}
                  {==
                     {gamemode get is_tour_quickplay}
                     TRUE}}
               {if
                  [show_warning]
                  {set
                     [show_warning]
                     FALSE}
                  {ui push_screen setlist_warning_screen}}
               {do
                  {song_offer_provider set_setlist_mode TRUE}
                  {if
                     {==
                        -1
                        {meta_performer next_any_index}}
                     {song_offer_provider
                        set_highlighted_ix
                        {song_offer_provider
                           data_index
                           {meta_performer revert_song_selection}}}
                     {song_select_panel sync_song}
                     {song_select_panel refresh_selected_song}
                     {song_select_panel refresh_setlist}}
                  {song_select_panel on_change_setlist_mode}}}}}
      {if
         [saved_setlist]
         {set
            [saved_setlist]
            FALSE}
         {$this move_on}})
   (BUTTON_DOWN_MSG
      {cond
         ({&&
               {== $action kAction_Option}
               {!
                  {song.lst is_scrolling}}}
            {song_offer_provider
               set_highlighted_ix
               {song_offer_provider
                  get_next_header
                  {song.lst selected_pos}}}
            {$this sync_song}
            {$this refresh_selected_song})
         #ifdef HX_WII
         ({&&
               {== $action kAction_Option1}
               {!
                  {song.lst is_scrolling}}}
            {song_offer_provider
               set_highlighted_ix
               {song_offer_provider
                  get_next_header
                  {song.lst selected_pos}}}
            {$this sync_song}
            {$this refresh_selected_song})
         #endif
         #ifndef KIOSK_DEMO
         ({&&
               {== $action kAction_ViewModify}
               {!
                  {song.lst is_scrolling}}}
            {song.lst set circular_only FALSE}
            {song_offer_provider next_sort}
            {$this sync_sort_method}
            {song_offer_provider init_highlight}
            {$this sync_song}
            {$this refresh_selected_song})
         #endif
         ({== $action kAction_Cancel}
            {if_else
               {song_offer_provider get_setlist_mode}
               {do
                  ($previous_ix
                     {meta_performer previous_song_selection})
                  {synth play button_back}
                  {meta_performer revert_song_selection}
                  {if_else
                     {== -1 $previous_ix}
                     {if_else
                        {==
                           {gamemode get song_select_mode}
                           song_select_tour}
                        kDataUnhandled
                        {do
                           {song_offer_provider set_setlist_mode FALSE}
                           {$this on_change_setlist_mode}}}
                     {do
                        {$this refresh_setlist}
                        {$this refresh}
                        {song_offer_provider init_highlight}
                        {$this refresh_selected_song}}}}
               {do
                  {synth play button_back}
                  {if_else
                     {'||'
                        {is_leader_local}
                        {song_offer_provider get is_leaderboards}}
                     kDataUnhandled
                     {band_ui trigger_event remote_exit}}}})
         ({&&
               {== $action kAction_Start}
               {!
                  {song.lst is_scrolling}}}
            {if_else
               {song_offer_provider get_setlist_mode}
               {if
                  {&&
                     {!=
                        song_select_tour
                        {gamemode get song_select_mode}}
                     {!=
                        0
                        {meta_performer next_any_index}}}
                  {synth play button_select}
                  {meta_performer finalize_setlist}
                  {$this move_on}}
               {do
                  {synth play button_select}
                  {if
                     {&&
                        {!
                           {song_offer_provider get is_leaderboards}}
                        {'||'
                           {song_offer_provider
                              is_header
                              {song.lst selected_pos}}
                           {song_mgr
                              is_song_shared
                              {song_offer_provider
                                 get_selected_song
                                 {song.lst selected_pos}}}}}}
                  {$this component_select song.lst $player $player_num}}})
         ({&&
               {== $action kAction_Confirm}
               {!
                  {song.lst is_scrolling}}}
            #ifdef KIOSK_DEMO
            {do
               ($song
                  {song.lst selected_sym})
               {if_else
                  {'||'
                     {== $song wearethechampions}
                     {== $song thefinalcountdown}
                     {== $song intoodeep}}
                  {do
                     {synth play button_select}
                     {$this component_select song.lst $player $player_num}}
                  {synth play button_error}}}
            #else
            {do
               {synth play button_select}
               {$this component_select song.lst $player $player_num}}
            #endif)
         (TRUE kDataUnhandled)})
   (on_button_held
      ($user_num $user $raw_button $action $pad_num)
      #ifndef KIOSK_DEMO
      {if_else
         {== $action kAction_Confirm}
         {if
            {!
               {song.lst is_scrolling}}
            {do
               ($selected
                  {song.lst selected_sym})
               {if_else
                  {&&
                     {song_offer_provider are_headers_selectable}
                     {!= make_a_setlist $selected}}
                  {if_else
                     {&&
                        {gamemode get is_tour}
                        {!
                           {gamemode get is_tour_quickplay}}
                        {is_likeness_song $selected}
                        {!
                           {{tour band}
                              is_song_unlocked
                              $selected}}}
                     {synth play button_error}
                     {do
                        {song_offer_provider set_setlist_mode TRUE}
                        {$this on_change_setlist_mode}
                        {$this component_select song.lst $user $user_num}
                        {synth play button_select}}}
                  {do
                     {$this component_select song.lst $user $user_num}
                     {synth play button_select}}}}}
         {do
            {song_select_details_panel
               shortcut_enter
               #ifndef HX_WII
               {if_else
                  {== $action kAction_Option}
                  groups
                  sorts}
               #else
               {if_else
                  {'||'
                     {== $action kAction_Option}
                     {== $action kAction_Option1}}
                  groups
                  sorts}
               #endif}}}
      #endif)
   (SCROLL_MSG
      {synth play button_focus}
      {song_offer_provider play_preview -1}
      {song_offer_provider
         set_highlighted_ix
         {song.lst selected_pos}}
      {$this sync_song}
      {$this refresh_selected_song})
   (on_change_setlist_mode
      {$this sync_setlist_mode}
      {song_select_details_panel init_setlist_mode}
      {$this refresh}
      {song_offer_provider init_highlight}
      {$this sync_song}
      {$this refresh_selected_song}
      {$this update_held_buttons}
      {$this update_helpbar})
   (sync_song)
   (sync_sort_method)
   (sync_setlist_mode)
   (remote_set_highlight
      ($highlight)
      {if
         {song_offer_provider set_remote_highlight $highlight}
         {if
            {song_select_panel is_up}
            {$this refresh_selected_song}}})
   (remote_set_sort_method
      ($sort_sym)
      {if
         {!=
            {song_offer_provider current_sort}
            $sort_sym}
         {song_offer_provider set_sort $sort_sym}
         {if
            {song_select_panel is_up}
            {song_offer_provider init_highlight}
            {$this refresh_selected_song}}})
   (remote_set_setlist_mode
      ($bool)
      {song_offer_provider set_setlist_mode $bool}
      {if
         {song_select_panel is_up}
         {$this on_change_setlist_mode}})
   (refresh_selected_song
      {do
         ($ix
            {song_offer_provider get_highlighted_ix})
         {if
            {!=
               $ix
               {song.lst selected_pos}}
            {song.lst set_selected_simulate_scroll $ix}}
         {song_select_details_panel refresh_details $ix}
         {if
            {&&
               {$this is_up}
               {!
                  {ui in_transition}}}
            {if_else
               {song_offer_provider is_subheader $ix}
               {do
                  {set
                     [tmp_ix]
                     {'+' 1 $ix}}
                  {set
                     [last_preview_play]
                     {taskmgr ui_seconds}}
                  {set
                     [preview_playing]
                     FALSE}}
               {do
                  {set
                     [tmp_ix]
                     $ix}
                  {set
                     [last_preview_play]
                     {taskmgr ui_seconds}}
                  {set
                     [preview_playing]
                     FALSE}}}}
         {$this refresh_sort}
         {scroller.mesh
            set_local_scale
            1
            {min
               1
               {/
                  {song.lst get display_num}
                  {song_offer_provider num_data}}}
            1}
         {scroll.tnm
            set_frame
            {/
               {min
                  {song.lst first_showing}
                  {max
                     0
                     {-
                        {song_offer_provider num_data}
                        {song.lst get display_num}}}}
               {song_offer_provider num_data}}}
         {do
            ($showing
               {>
                  {song_offer_provider num_data}
                  {song.lst get display_num}})
            {scroller.mesh set_showing $showing}}})
   (poll
      {set $valid_preview_song TRUE}
      #ifdef KIOSK_DEMO
      {do
         ($song
            {song.lst selected_sym})
         {if_else
            {'||'
               {== $song wearethechampions}
               {== $song thefinalcountdown}
               {== $song intoodeep}}
            {set $valid_preview_song TRUE}
            {set $valid_preview_song FALSE}}}
      #endif
      {if
         $valid_preview_song
         {do
            ($last_play_delta
               {-
                  {taskmgr ui_seconds}
                  [last_preview_play]})
            {#ifdef HX_XBOX
               if
               {&&
                  {> $last_play_delta 0.0}
                  {!
                     [preview_playing]}
                  {!
                     {ui in_transition}}}
               #else
               if
               {&&
                  {> $last_play_delta 1.25}
                  {!
                     [preview_playing]}
                  {!
                     {ui in_transition}}}
               #endif
               {do
                  {song_offer_provider
                     play_preview
                     [tmp_ix]}
                  {set
                     [preview_playing]
                     TRUE}}}}})
   (refresh_sort
      {do
         ($ix
            {song_offer_provider get_highlighted_ix})
         ($sort
            {localize
               {song_offer_provider current_sort}})
         ($category
            {if_else
               {song_offer_provider is_function $ix}
               ''
               {localize
                  {song_offer_provider get_current_shortcut $ix}}})
         {sort.lbl
            set_localized
            {sprintf
               "%s : %s"
               $sort
               $category}}}
      {song.lst set_dirty})
   (refresh_setlist
      {song_select_details_panel refresh_setlist}
      {$this update_helpbar})
   (refresh
      {song.lst set_provider song_offer_provider})
   (update_meta_performer
      {$this refresh_setlist}
      {$this refresh}
      {$this refresh_selected_song})
   (SELECT_MSG
      {cond
         ({==
               make_a_setlist
               {song.lst selected_sym}}
            {song_offer_provider set_setlist_mode TRUE}
            {$this on_change_setlist_mode})
         ({==
               load_setlist
               {song.lst selected_sym}}
            {song_offer_provider set_setlist_mode TRUE}
            {game load_setlist}
            {$this on_change_setlist_mode})
         ({==
               play_setlist
               {song.lst selected_sym}}
            {meta_performer finalize_setlist}
            {$this move_on})
         ({song_offer_provider
               is_header
               {song.lst selected_pos}}
            #ifndef E3_DEMO
            {do
               ($ix
                  {song.lst selected_pos})
               ($result 0)
               {if
                  {song_offer_provider is_active $ix}
                  {set
                     $result
                     {song_offer_provider select_header $ix}}
                  {if_else
                     {==
                        $result
                        {song_offer_provider get_header_song_count $ix}}
                     {$this move_on}
                     {do
                        {if_else
                           {== 0 $result}
                           {ui push_screen fail_add_header_screen}
                           {if_else
                              {== -1 $result}
                              {ui push_screen fail_add_header_too_big_screen}
                              {ui push_screen incomplete_add_header_screen}}}}}}}
            #endif)
         (TRUE
            {if
               {$this try_save_song}
               {if_else
                  {&&
                     {song_offer_provider get_setlist_mode}
                     {!=
                        -1
                        {meta_performer next_any_index}}}
                  {do
                     {song_offer_provider init_highlight}
                     {$this sync_song}
                     {$this refresh_setlist}
                     {$this refresh}
                     {$this refresh_selected_song}}
                  {do
                     {if
                        {song_offer_provider get_setlist_mode}
                        {meta_performer finalize_setlist}}
                     {$this refresh_setlist}
                     {$this move_on}}}})})
   #include ../config/song_overrides.dta
   (move_on
      {gamemode set is_challenge FALSE}
      {gamemode set lego_mode TRUE}
      {gamemode set max_stars 5}
      {gamemode set can_fail_individually TRUE}
      {if
         {==
            {gamemode get_practice}
            0}
         {gamemode set allow_overdrive_phrases TRUE}}
      {cutscene clear_current_cutscene}
      {helpbar
         set_config
         ()}
      {if_else
         {song_offer_provider get is_leaderboards}
         #ifndef HX_EE
         {ui
            goto_screen
            {gamemode get leaderboards_screen}}
         #else
         {do
            {highscores
               set_song_sym
               {song.lst selected_sym}}
            {ui goto_screen highscores_list_screen}}
         #endif
         {switch
            {gamemode get song_select_mode}
            (song_select_quickplay
               {input_mgr set_user ''}
               {ui
                  reset_screen
                  {gamemode get ready_screen}}
               {do
                  ($entry
                     {song.lst selected_pos})
                  {if
                     {song_offer_provider is_song $entry}
                     {if
                        {is_likeness_song
                           {song_offer_provider get_selected_song $entry}}
                        {gamecfg set coop_intro_category INTRO}}}})
            (song_select_tour
               {if_else
                  {gamemode get_editing_album}
                  {{ui current_screen}
                     update_album_setlist}
                  {do
                     ($ready_screen
                        {gamemode get ready_screen})
                     {if
                        {'||'
                           {== $ready_screen difficulty_screen}
                           {== $ready_screen qp_difficulty_screen}}
                        {$ready_screen set cancel_screen song_select_tour_screen}}
                     {ui reset_screen $ready_screen}}})
            (song_select_practice
               {qp_difficulty_screen set cancel_screen song_select_screen}
               {game set_venue blank/blank_01/blank_01.milo}
               {ui
                  reset_screen
                  {gamemode get ready_screen}})
            (song_select_leaderboards
               {if
                  {!
                     {song_offer_provider get is_leaderboards}}
                  {notify
                     "got into leaderboards without setting song_offer_provider is_leaderboards!\n"}})
            (song_select_jukebox
               {if_else
                  {!
                     {modifier_mgr is_modifier_active mod_choose_venue}}
                  {do
                     {game
                        set_venue
                        {random_venue}}
                     {ui
                        reset_screen
                        {gamemode get ready_screen}}}
                  {do
                     {ui reset_screen qp_selvenue_screen}}})
            {fail
               "Unkown song_select_mode\n"}}})
   (move_on_quickplay
      {unless
         {ui in_transition}
         {do
            ($override_song
               {find_exists
                  [song_overrides]
                  {meta_performer song}})
            {if
               {!= $override_song kDataUnhandled}
               {gamecfg
                  set_override_band
                  {elem $override_song 1}}}}
         {ui
            reset_screen
            {gamemode get ready_screen}}})
   (try_save_song
      {do
         ($song
            {song_offer_provider
               get_selected_song
               {song.lst selected_pos}})
         {cond
            #ifdef KIOSK_DEMO
            ({&&
                  {!= $song wearethechampions}
                  {!= $song thefinalcountdown}
                  {!= $song intoodeep}}
               FALSE)
            (TRUE
               {meta_performer set_song $song}
               TRUE)
            #else
            ({== $song ''}
               {if
                  {song_offer_provider get_setlist_mode}
                  {meta_performer finalize_setlist}}
               {$this refresh_setlist}
               {$this move_on}
               FALSE)
            ({song_offer_provider get is_leaderboards}
               TRUE)
            ;({&& ;we remove the license mgr checks so we get past the first error loading ugc
            ;      {song_mgr is_song_exported $song}
            ;      {!
            ;         {license_mgr is_export_license_valid}}}
            ;   {ui push_screen invalid_license_screen}
            ;   FALSE)
            ;({! ;but then we pop this second error, so we remove it too
            ;      {song_mgr is_song_shared $song}}
            ;   {do
            ;      {ui push_screen invalid_selection_screen}
            ;      FALSE})
            ({song_mgr
                  has_missing_parts
                  $song
                  {gamemode get missing_part_type}}
               {do
                  {missing_parts_screen set_song $song}
                  {ui push_screen missing_parts_screen}
                  FALSE})
            ;({! ;but then we pop this THIRD error because the game isn't "up to date". bitch im on 1.01 fuck you
            ;      {song_mgr check_version $song}}
            ;   {ui push_screen invalid_version_screen}
            ;   FALSE)
            (TRUE
               {do
                  {switch
                     {gamemode get song_select_mode}
                     ((song_select_quickplay song_select_tour song_select_practice song_select_jukebox)
                        {if_else
                           {song_offer_provider get_setlist_mode}
                           {meta_performer set_any_song $song}
                           {meta_performer set_song $song}})
                     (song_select_leaderboards
                        {notify
                           "please set song_offer_provider is_leaderboards\n"})
                     {fail
                        "Unknown song_select_mode\n"}}
                  TRUE})
            #endif}})
   (update_helpbar
      {if_else
         {'||'
            {$this is_user_local}
            {song_offer_provider get is_leaderboards}}
         {if_else
            {song_offer_provider get_setlist_mode}
            {if_else
               {==
                  0
                  {meta_performer next_any_index}}
               {helpbar
                  set_config
                  ((cancel helpbar_setlist_cancel)
                     (confirm leader_hb_choosesong)
                     #ifndef KIOSK_DEMO
                     (view_modify leader_hb_songfilter)
                     (option helpbar_next_heading helpbar_next_heading_hold)
                     #endif)}
               {helpbar
                  set_config
                  ((cancel helpbar_setlist_revert)
                     (confirm leader_hb_choosesong)
                     (state_confirm
                        {if_else
                           {==
                              song_select_tour
                              {gamemode get song_select_mode}}
                           ''
                           helpbar_play_setlist})
                     #ifndef KIOSK_DEMO
                     (view_modify leader_hb_songfilter)
                     (option helpbar_next_heading helpbar_next_heading_hold)
                     #endif)}}
            {helpbar
               set_config
               ((cancel
                     {if_else
                        {'||'
                           {is_leader_local}
                           {song_offer_provider get is_leaderboards}}
                        helpbar_back
                        endgame_hb_leave_session})
                  #ifdef E3_DEMO
                  (confirm leader_hb_choosesong)
                  #else
                  {if_else
                     {song_offer_provider are_headers_selectable}
                     (confirm leader_hb_choosesong helpbar_start_setlist_hold)
                     (confirm leader_hb_choosesong)}
                  #endif
                  #ifndef KIOSK_DEMO
                  (view_modify leader_hb_songfilter)
                  (option helpbar_next_heading helpbar_next_heading_hold)
                  #endif)}}
         {helpbar
            set_config
            ()}})
   (storage_changed
      {band_ui trigger_event storage_changed})}
{func
   song_select_get_back_screen
   {do
      {if_else
         {song_offer_provider get is_leaderboards}
         #ifndef HX_EE
         {if_else
            {==
               {leaderboards get_type}
               kPlayerSong}
            {gamemode get leaderboards_seltrack_screen}
            {gamemode get community_screen}}
         #else
         {switch
            {highscores get_track_sym}
            (band highscore_seltrack_screen)
            highscore_seldiff_screen}
         #endif
         {switch
            {gamemode get song_select_mode}
            (song_select_quickplay
               #ifdef KIOSK_DEMO
               matchmaking_screen
               #else
               quickplay_venuescreen
               #endif)
            (song_select_tour
               {if_else
                  {gamemode get_practice}
                  quickplay_venuescreen
                  garage_gigscreen})
            (song_select_practice
               {if_else
                  {tour band}
                  loading_stage_screen
                  training_menu_screen})
            (song_select_jukebox
               {do
                  ($player_num
                     {session_mgr get_leader_num})
                  ($pcfg
                     {game get_player_config $player_num})
                  ($num_bands
                     {{profile_mgr get_profile $player_num}
                        num_bands})
                  {$pcfg
                     set_char
                     {available_prefab $player_num}}
                  {if_else
                     {> $num_bands 0}
                     jukebox_band_sel_screen
                     main_community_screen}})
            {fail
               "Unknown song_mode, or didn't set song_offer_provider is_leaderboards\n"}}}}}
{new
   UIPanel
   lb_song_select_content_loading_panel
   (load
      {content_mgr start_refresh}
      #ifndef NOWIINETWORKING
      #ifndef HX_EE
      {content_loading_panel allowed_to_show TRUE}
      #endif
      #endif)
   #ifndef NOWIINETWORKING
   #ifndef HX_EE
   (finish_load
      {content_loading_panel allowed_to_show FALSE})
   #endif
   #endif
   (is_loaded
      {content_mgr refresh_done})}
#define COMMON_SONG_SELECT_SCREEN
((focus song_select_panel)
   (back
      {do
         {song_offer_provider set_setlist_mode FALSE}
         {song_select_get_back_screen}})
   (net_sync_scroll FALSE))
{new
   BandScreen
   song_select_screen
   (panels
      meta
      #ifndef HX_EE
      song_sync_panel
      #endif
      postsong_sfx_panel
      movie_panel
      song_select_details_panel
      song_select_panel
      song_select_lower3rd_panel)
   COMMON_SONG_SELECT_SCREEN
   (exit
      {reset_random_selection})}
{new
   BandScreen
   reset_song_select_screen
   (panels meta postsong_sfx_panel movie_panel song_select_lower3rd_panel)
   (enter
      {song_offer_provider set_setlist_mode FALSE}
      {ui goto_screen song_select_screen})}
{func
   do_clear_setlist
   {if_else
      {&&
         {==
            {gamemode get song_select_mode}
            song_select_tour}
         {!
            {song_offer_provider get is_leaderboards}}}
      {do
         {if
            {{tour band}
               gig}
            {if_else
               {{tour band}
                  playing_special_gig}
               {{tour band}
                  set_special_gig
                  {{tour band}
                     special_gig}}
               {{tour band}
                  set_gig
                  {{tour band}
                     gig}}}}
         {song_offer_provider set_setlist_mode TRUE}
         {song_select_panel on_change_setlist_mode}}
      {do
         {meta_performer reset_songs}
         {song_offer_provider set_setlist_mode FALSE}
         {song_select_panel on_change_setlist_mode}}}}
{new
   BandScreen
   setlist_warning_screen
   (panels dialog_panel)
   (focus dialog_panel)
   (helpbar
      ((confirm helpbar_select)))
   (enter
      {dialog_panel
         set_yesno
         {localize song_select_clear_setlist}
         no.btn})
   (exit)
   (SELECT_MSG
      {if
         {== $component yes.btn}
         {do_clear_setlist}}
      {if
         {== $component no.btn}
         {song_offer_provider set_setlist_mode TRUE}
         {if
            {==
               -1
               {meta_performer next_any_index}}
            {song_offer_provider
               set_highlighted_ix
               {song_offer_provider
                  data_index
                  {meta_performer revert_song_selection}}}
            {song_select_panel sync_song}
            {song_select_panel refresh_selected_song}
            {song_select_panel refresh_setlist}}
         {song_select_panel on_change_setlist_mode}}
      {song_select_panel set check_setlist FALSE}
      {ui pop_screen})}
{new
   BandScreen
   setlist_save_screen
   (panels dialog_panel)
   (focus dialog_panel)
   (helpbar
      ((confirm helpbar_select)))
   (enter
      {dialog_panel
         set_yesno
         {localize song_select_save_setlist}
         yes.btn})
   (exit)
   (SELECT_MSG
      {if
         {== $component yes.btn}
         {game save_setlist}
         {seldiff_panel set do_autosave TRUE}}
      {if
         {== $component no.btn}}
      {song_select_panel set show_warning FALSE}
      {song_select_panel set saved_setlist TRUE}
      {ui pop_screen})}
{new
   BandScreen
   invalid_selection_screen
   (panels dialog_panel)
   (focus dialog_panel)
   (helpbar
      ((confirm helpbar_select)))
   (enter
      {dialog_panel
         set_ok
         {localize invalid_song}})
   (exit)
   (SELECT_MSG
      {ui pop_screen})}
{new
   BandScreen
   invalid_version_screen
   (panels dialog_panel)
   (focus dialog_panel)
   (helpbar
      ((confirm helpbar_select)))
   (enter
      {dialog_panel
         set_ok
         {localize invalid_version}})
   (exit)
   (SELECT_MSG
      {song_select_panel set check_setlist FALSE}
      {ui pop_screen})}
{new
   BandScreen
   invalid_license_screen
   (panels dialog_panel)
   (focus dialog_panel)
   (enter
      {dialog_panel
         set_ok
         {localize invalid_license}})
   (exit)
   (SELECT_MSG
      {song_select_panel set check_setlist FALSE}
      {ui pop_screen})}
{new
   BandScreen
   missing_parts_screen
   (panels dialog_panel)
   (focus dialog_panel)
   (helpbar
      ((confirm helpbar_select)))
   (missing_part_str
      "")
   (enter
      {dialog_panel
         set_ok
         [missing_part_str]})
   (exit.)
   (SELECT_MSG
      {song_select_panel set check_setlist FALSE}
      {ui pop_screen})
   (set_song
      ($song)
      {do
         ($missing
            {array 0})
         {song_mgr find_missing_parts $song $missing}
         {set
            [missing_part_str]
            {localize missing_parts_error}}
         {foreach
            $part
            $missing
            {set
               [missing_part_str]
               {sprint
                  [missing_part_str]
                  "\n"
                  {localize
                     {sprint
                        "missing_"
                        $part}}}}}})}
{new
   BandScreen
   incomplete_add_header_screen
   (panels dialog_panel)
   (focus dialog_panel)
   (helpbar
      ((confirm helpbar_select)))
   (enter
      {dialog_panel
         set_ok
         {localize incomplete_add_header}})
   (SELECT_MSG
      {song_select_panel move_on})}
{new
   BandScreen
   fail_add_header_screen
   (panels dialog_panel)
   (focus dialog_panel)
   (helpbar
      ((confirm helpbar_select)))
   (enter
      {dialog_panel
         set_ok
         {localize fail_add_header}})
   (exit)
   (SELECT_MSG
      {song_select_panel set check_setlist FALSE}
      {ui pop_screen})}
{new
   BandScreen
   fail_add_header_too_big_screen
   (panels dialog_panel)
   (focus dialog_panel)
   (helpbar
      ((confirm helpbar_select)))
   (enter
      {dialog_panel
         set_ok
         {localize fail_add_header_too_big}})
   (exit)
   (SELECT_MSG
      {ui pop_screen})}
{new
   UIPanel
   qp_selvenue_panel
   (file
      "../../ui/qp_selvenue.milo")
   (focus venue.lst)
   (enter
      {leader.lbl
         set_localized
         {sprintf
            "Leader: %s"
            {{session_mgr get_leader_user}
               get
               player_name}}}
      {do
         ($venue_array
            {get_venue_select_array})
         ($old_venue
            {game get_venue})
         {venue.lst set_data $venue_array}
         {if
            {&&
               {!= $old_venue ''}
               {find_elem $venue_array $old_venue}}
            {venue.lst set_selected $old_venue}}})
   (exit
      {game
         set_venue
         {venue.lst selected_sym}})
   (game_changed
      {venue.lst
         set_selected
         {game get_venue}})
   (SELECT_MSG
      {cond
         ({gamemode get is_h2h_arrangement}
            {h2h_goto_tracksel_screen})
         (TRUE
            {ui
               goto_screen
               {gamemode get ready_screen}})})}
{new
   BandScreen
   qp_selvenue_screen
   (panels meta movie_panel postsong_sfx_panel qp_selvenue_panel song_select_lower3rd_panel song_sync_panel)
   (focus qp_selvenue_panel)
   (back song_select_screen)
   (helpbar
      ((cancel helpbar_back)
         (confirm helpbar_select)))}