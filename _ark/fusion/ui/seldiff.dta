{new
   UIPanel
   seldiff_border_panel
   (file
      "seldiff_lower3rd.milo")
   (refill_songname
      {if_else
         {gamemode get is_tour}
         {if_else
            {gamemode get is_challenge}
            {$this setup_for_challenge}
            {if_else
               {gamemode get is_tour_quickplay}
               {$this setup_for_qp_gig}
               {$this setup_for_tour_gig}}}
         {if_else
            {gamemode get is_challenge}
            {$this setup_for_challenge}
            {$this setup_for_qp_gig}}})
   (enter
      {$this refill_songname})
   (setup_for_challenge
      {song.lbl
         set
         text_token
         {challenge_mgr get_name}}
      {by_line.lbl
         set
         text_token
         {song_mgr
            song_name
            {challenge_mgr get_song}}})
   (setup_for_tour_gig
      {do
         ($band
            {tour band})
         {if_else
            {gamecfg get_globalshortsongmode}
            {song.lbl
               set_localized
               {sprintf
                  "%s - %s"
                  {{$band gig}
                     display_name}
                  {localize short_version}}}
            {song.lbl
               set_localized
               {{$band gig}
                  display_name}}}
         {by_line.lbl
            set
            text_token
            {{$band gig}
               description}}})
   (setup_for_qp_gig
      {do
         ($song
            {meta_performer song})
         {if_else
            {gamecfg get_globalshortsongmode}
            {song.lbl
               set_localized
               {sprintf
                  "%s - %s"
                  {song_mgr song_name $song}
                  {localize short_version}}}
            {song.lbl
               set_localized
               {song_mgr song_name $song}}}
         {by_line.lbl
            set_localized
            {song_mgr by_line $song}}})}
{new
   UIPanel
   seldiff_panel
   (file
      "seldiff.milo")
   (do_autosave FALSE)
   (unload)
   (enter
      {do
         ($mode_frame
            {cond
               ({gamemode is_solo}
                  1)
               ({gamemode is_h2h_arrangement}
                  2)
               (TRUE 0)})
         {pos_slot_00.tnm set_frame $mode_frame}
         {pos_slot_01.tnm set_frame $mode_frame}
         {pos_slot_02.tnm set_frame $mode_frame}
         {pos_slot_03.tnm set_frame $mode_frame}}
      {seldiff_02.grp
         set_showing
         {!
            {gamemode is_h2h_arrangement}}}
      {seldiff_03.grp
         set_showing
         {!
            {gamemode is_h2h_arrangement}}}
      #ifdef HX_WII
      {platform_mgr
         add_sink
         $this
         (storage_changed)}
      #endif
      {if
         {==
            [do_autosave]
            TRUE}
         {do
            {autosave}
            {$this set do_autosave FALSE}}})
   #ifdef HX_WII
   (storage_changed
      {band_ui trigger_event storage_changed})
   (exit
      {platform_mgr remove_sink $this storage_changed})
   #endif}
#define SELDIFF_SCREEN_PANELS
((slots COOP_SLOTS_ORDER)
   (type
      (player_num
         {gamecfg
            get_player_num_from_slot_num
            [slot_num]})
      (slot_num 0)
      (slot none)
      (option '')
      (current_option
         {cond
            ({!
                  {$this is_active}}
               inactive)
            ({&&
                  {$this is_guitar_slot}
                  {!
                     {$this is_track_set}}}
               part_select)
            ({&&
                  {$this is_guitar_slot}
                  {!
                     {$this is_other_track_set}}}
               part_select_wait)
            ({!
                  {{user_mgr
                        get_band_user
                        [player_num]}
                     is_ready}}
               diff_select)
            diff_selected})
      (enter
         {do
            {gamecfg
               set_user_active
               [slot_num]
               FALSE}
            {if
               {$this is_connected}
               {do
                  ($user
                     {user_mgr
                        get_band_user
                        [player_num]})
                  {$user set_ready FALSE}
                  {select.grp set_showing TRUE}
                  {if
                     {&&
                        {!
                           {gamemode is_h2h_arrangement}}
                        {$user is_local_player}
                        {$user get_char}}
                     {switch
                        {$user get_controller_type}
                        (kControllerDrum
                           {$user set_track_type kTrackDrum})
                        (kControllerVocals
                           {$user set_track_type kTrackVocals})
                        {$user set_track_type kTrackNone}}}}}})
      (update
         {if
            {$this is_active}
            {do
               ($user
                  {user_mgr
                     get_band_user
                     [player_num]})
               ($char
                  {$user get_char})
               ($ready
                  {$user is_ready})
               ($diff
                  {$user get_difficulty_sym})
               ($min_diff
                  {meta_performer min_difficulty_select})
               {join.grp set_showing FALSE}
               {player.lbl set_showing TRUE}
               {instrument.lbl
                  set_localized
                  {if_else
                     {==
                        {$user get_track_type}
                        kTrackNone}
                     {$char
                        instrument_icon
                        {$user get_controller_sym}}
                     {$char
                        track_icon
                        {$user get_track_sym}}}}
               {if
                  {==
                     {$user get_controller_sym}
                     guitar}
                  {guitar.lbl
                     set_localized
                     {$char track_icon guitar}}
                  {bass.lbl
                     set_localized
                     {$char track_icon bass}}}
               {unless
                  {gamemode is_solo}
                  {{seldiff_panel
                        find
                        {sprintf
                           "remote%i.mnm"
                           [slot_num]}}
                     set_frame
                     {!
                        {gamecfg
                           is_player_local
                           [player_num]}}}}
               {player.lbl
                  set_localized
                  {if_else
                     {gamemode is_tour}
                     {$user intro_name}
                     {$user intro_name}}}
               {if_else
                  {&&
                     {$this is_guitar_slot}
                     {'||'
                        {!
                           {$this is_track_set}}
                        {!
                           {$this is_other_track_set}}}}
                  {do
                     {seldiff.grp set_showing FALSE}
                     {selpart.grp set_showing TRUE}}
                  {do
                     {seldiff.grp set_showing TRUE}
                     {selpart.grp set_showing FALSE}}}
               {if
                  {seldiff.grp showing}
                  {do
                     {if_else
                        {gamecfg
                           is_novice_mode
                           [player_num]}
                        {do
                           {{$this focus_name}
                              set_showing
                              FALSE}
                           {novice.btn set_showing TRUE}
                           {$this set_focus novice.btn}
                           {$this
                              iterate
                              BandButton
                              $b
                              {if
                                 {!=
                                    {$b name}
                                    novice.btn}
                                 {$b
                                    set_showing
                                    {! $ready}}}}}
                        {$this
                           iterate
                           BandButton
                           $b
                           {if_else
                              {==
                                 {$b get text_token}
                                 $diff}
                              {do
                                 {$this set_focus $b}
                                 {$b set_showing TRUE}}
                              {$b
                                 set_showing
                                 {! $ready}}}}}
                     {ready.lbl set_showing $ready}}}
               {do
                  ($diff 0)
                  {foreach
                     $diff_sym
                     (DIFF_SYMBOLS)
                     {if
                        {< $diff $min_diff}
                        {$this
                           disable
                           {sprint
                              $diff_sym
                              ".btn"}}}
                     {'++' $diff}}}
               {if
                  {selpart.grp showing}
                  {if_else
                     {$this is_track_set}
                     {do
                        ($track
                           {$user get_track_type})
                        {guitar.grp
                           set_showing
                           {== $track kTrackGuitar}}
                        {bass.grp
                           set_showing
                           {== $track kTrackBass}}
                        {if_else
                           {!
                              {$this is_other_track_set}}
                           {waiting_part.lbl set_showing TRUE}
                           {waiting_part.lbl set_showing FALSE}}}
                     {do
                        ($required_part
                           {$this limit_track})
                        ($parts
                           (guitar bass))
                        {guitar.grp set_showing TRUE}
                        {bass.grp set_showing TRUE}
                        {guitar.btn set_showing TRUE}
                        {bass.btn set_showing TRUE}
                        {waiting_part.lbl set_showing FALSE}
                        {if
                           {&&
                              {!=
                                 {$this focus_name}
                                 guitar.btn}
                              {!=
                                 {$this focus_name}
                                 bass.btn}}
                           {$this set_focus guitar.btn}}
                        {foreach
                           $part
                           $parts
                           {do
                              ($button
                                 {sprint
                                    $part
                                    ".btn"})
                              ($label
                                 {sprint
                                    $part
                                    ".lbl"})
                              {if_else
                                 {&&
                                    {!= $required_part ''}
                                    {!= $required_part $part}}
                                 {do
                                    {$this disable $button}
                                    {$this disable $label}}
                                 {do
                                    {$this enable $button}
                                    {$this enable $label}}}}}}}}}})
      (limit_track
         {do
            ($required_part
               {meta_performer required_part})
            {if_else
               {find_elem
                  (guitar bass)
                  $required_part}
               $required_part
               ''}})
      (is_ready
         {'||'
            {!
               {$this is_connected}}
            {!
               {game
                  is_player_participating
                  [player_num]}}
            {{user_mgr
                  get_band_user
                  [player_num]}
               is_ready}})
      (is_connected
         {&&
            {!=
               [player_num]
               -1}
            {gamecfg
               is_player_participating
               [player_num]}})
      (is_active
         {&&
            {!=
               [player_num]
               -1}
            {gamecfg
               is_player_participating
               [player_num]}})
      (is_guitar_slot
         {==
            [slot]
            guitar})
      (is_track_set
         {!=
            {{user_mgr
                  get_band_user
                  [player_num]}
               get_track_type}
            kTrackNone})
      (is_other_track_set
         {do
            ($ret TRUE)
            {gamecfg
               foreach_user
               $user
               {if
                  {&&
                     {$user is_participating}
                     {!=
                        {$user get player_num}
                        [player_num]}
                     {==
                        {$user get_controller_type}
                        kControllerGuitar}
                     {==
                        {$user get_track_type}
                        kTrackNone}}
                  {set $ret FALSE}}}
            $ret})
      (is_only_guitarist
         {do
            ($num_guitarists 0)
            {gamecfg
               foreach_user
               $user
               {if
                  {&&
                     {$user is_participating}
                     {==
                        {$user get_controller_type}
                        kControllerGuitar}}
                  {'+=' $num_guitarists 1}}}
            {&&
               {$this is_guitar_slot}
               {== $num_guitarists 1}}})
      (send_focus_msg TRUE))
   (options
      (inactive)
      (part_select
         (SELECT_MSG
            {switch
               $component
               (guitar.btn
                  {{user_mgr
                        get_band_user
                        [player_num]}
                     set_track_type
                     kTrackGuitar})
               (bass.btn
                  {{user_mgr
                        get_band_user
                        [player_num]}
                     set_track_type
                     kTrackBass})}
            {{ui current_screen}
               verify_player_change
               [player_num]}
            {{ui current_screen}
               export_all
               update}
            {synth play button_select}
            kDataUnhandled))
      (part_select_wait
         (BUTTON_DOWN_MSG
            {synth play button_focus}
            {if_else
               {== $action kAction_Cancel}
               {do
                  {do
                     {{ui current_screen}
                        export_all
                        update}}
                  kDataUnhandled}
               {if
                  {== $action kAction_Confirm}
                  {synth play button_error}}}))
      (diff_select
         (FOCUS_MSG
            {if_else
               {==
                  novice.btn
                  {$new_focus name}}
               {do
                  {gamecfg
                     set_novice_mode
                     [player_num]
                     TRUE}
                  {{user_mgr
                        get_band_user
                        [player_num]}
                     set_difficulty
                     easy}}
               {do
                  {gamecfg
                     set_novice_mode
                     [player_num]
                     FALSE}
                  {{user_mgr
                        get_band_user
                        [player_num]}
                     set_difficulty
                     {switch
                        {$new_focus name}
                        (easy.btn easy)
                        (medium.btn medium)
                        (hard.btn hard)
                        (expert.btn expert)
                        none}}}}
            kDataUnhandled)
         (BUTTON_DOWN_MSG
            {if_else
               {&&
                  {== $action kAction_Cancel}}
               {do
                  {synth play button_back}
                  {if_else
                     {$this is_guitar_slot}
                     {do
                        {seldiff.grp set_showing FALSE}
                        {{user_mgr
                              get_band_user
                              [player_num]}
                           set_track_type
                           kTrackNone}
                        {{ui current_screen}
                           update
                           $this}
                        TRUE}
                     {do
                        {seldiff.grp set_showing FALSE}
                        {join.grp set_showing TRUE}
                        {{ui current_screen}
                           update
                           $this}
                        kDataUnhandled}}}
               {if_else
                  {'||'
                     {== $action kAction_Up}
                     {== $action kAction_Down}}
                  {do kDataUnhandled}
                  kDataUnhandled}})
         (SELECT_MSG
            {if_else
               {gamemode get is_practice}
               {ui goto_screen practice_preloading_screen}
               {{user_mgr
                     get_band_user
                     [player_num]}
                  set_ready
                  TRUE}}
            {{ui current_screen}
               update
               $this}
            {synth play button_select}
            kDataUnhandled))
      (diff_selected
         (BUTTON_DOWN_MSG
            {if_else
               {== $action kAction_Cancel}
               {do
                  {if
                     {$this is_guitar_slot}
                     {seldiff.grp set_showing FALSE}
                     {selpart.grp set_showing TRUE}
                     {{user_mgr
                           get_band_user
                           [player_num]}
                        set_track_type
                        kTrackNone}}
                  {{user_mgr
                        get_band_user
                        [player_num]}
                     set_ready
                     FALSE}
                  {{ui current_screen}
                     update
                     $this}}
               {do
                  {if_else
                     {== $action kAction_Start}
                     kDataUnhandled
                     TRUE}}}))))
#define SELDIFF_SCREEN_HANDLERS
((cancel_screen song_select_screen)
   (load_img)
   (allready FALSE)
   (poll
      {if
         {$this all_ready}
         {gamecfg updateshortsongmode}
         {$this start_loading}})
   (helpbar
      {do
         {seldiff_border_panel refill_songname}
         {if_else
            {'||'
               {gamemode get is_practice}
               {==
                  {gamemode get is_challenge}
                  TRUE}
               {&&
                  {==
                     {meta_performer num_songs}
                     1}
                  {==
                     FALSE
                     {gamecfg shortsongmodeavailable}}}
               {==
                  TRUE
                  {gamecfg any_dlc_in_set}}}
            ((cancel helpbar_back)
               (confirm helpbar_select))
            {if_else
               {gamecfg get_globalshortsongmode}
               ((cancel helpbar_back)
                  (confirm helpbar_select)
                  (option standard_song))
               ((cancel helpbar_back)
                  (confirm helpbar_select)
                  (option short_song))}}})
   (update_helpbar
      {seldiff_border_panel refill_songname}
      {if_else
         {'||'
            {gamemode get is_practice}
            {==
               {gamemode get is_challenge}
               TRUE}
            {&&
               {==
                  {meta_performer num_songs}
                  1}
               {==
                  FALSE
                  {gamecfg shortsongmodeavailable}}}
            {==
               TRUE
               {gamecfg any_dlc_in_set}}}
         {helpbar
            set_config
            ((cancel helpbar_back)
               (confirm helpbar_select))}
         {if_else
            {gamecfg get_globalshortsongmode}
            {helpbar
               set_config
               ((cancel helpbar_back)
                  (confirm helpbar_select)
                  (option standard_song))}
            {helpbar
               set_config
               ((cancel helpbar_back)
                  (confirm helpbar_select)
                  (option short_song))}}})
   (player_panels
      (panel seldiff_panel)
      SELDIFF_SCREEN_PANELS)
   (part_select_for_user
      ($player_num $track_type)
      {do
         {gamecfg
            foreach_user
            $user
            {if
               {&&
                  {!=
                     {$user slot_num}
                     $player_num}
                  {$user is_participating}
                  {$user get_char}
                  {==
                     {$user get_track_type}
                     $track_type}}
               {if_else
                  {== $track_type kTrackGuitar}
                  {set $track_type kTrackBass}
                  {set $track_type kTrackGuitar}}}}
         {{user_mgr get_band_user $player_num}
            set_track_type
            $track_type}})
   (verify_player_change
      ($player_num)
      {unless
         {gamemode is_h2h_arrangement}
         {do
            ($g0_pcfg 0)
            ($g1_pcfg 0)
            {gamecfg
               foreach_user
               $user
               {if
                  {&&
                     {$user is_participating}
                     {$user get_char}
                     {==
                        {$user get_controller_type}
                        kControllerGuitar}}
                  {if_else
                     $g0_pcfg
                     {set $g1_pcfg $user}
                     {set $g0_pcfg $user}}}}
            {if
               {&&
                  $g0_pcfg
                  $g1_pcfg
                  {'||'
                     {==
                        {$g0_pcfg get player_num}
                        $player_num}
                     {==
                        {$g1_pcfg get player_num}
                        $player_num}}
                  {!=
                     {$g0_pcfg get_track_type}
                     kTrackNone}
                  {!=
                     {$g1_pcfg get_track_type}
                     kTrackNone}
                  {==
                     {$g0_pcfg get_track_type}
                     {$g1_pcfg get_track_type}}
                  {$g0_pcfg is_local_player}}
               {do
                  {if_else
                     {random 0 1}
                     {do
                        {$g0_pcfg set_track_type kTrackBass}
                        {$g1_pcfg set_track_type kTrackGuitar}}
                     {do
                        {$g0_pcfg set_track_type kTrackGuitar}
                        {$g1_pcfg set_track_type kTrackBass}}}}}}})
   (BUTTON_DOWN_MSG
      {switch
         $action
         (#ifdef HX_WII
            (kAction_Option kAction_Option1)
            #else
            kAction_Option
            #endif
            {do
               {if
                  {&&
                     {==
                        {gamemode get is_practice}
                        FALSE}
                     {==
                        {gamemode get is_challenge}
                        FALSE}
                     {'||'
                        {!=
                           {meta_performer num_songs}
                           1}
                        {==
                           TRUE
                           {gamecfg shortsongmodeavailable}}}
                     {==
                        FALSE
                        {gamecfg any_dlc_in_set}}}
                  {synth play button_select}
                  {if_else
                     {gamecfg get_globalshortsongmode}
                     {gamecfg set_globalshortsongmode FALSE}
                     {gamecfg set_globalshortsongmode TRUE}}
                  {$this update_helpbar}}})
         (kAction_Cancel
            {do
               {synth play button_back}
               {if
                  {&&
                     {gamemode is_tour}
                     {==
                        [cancel_screen]
                        song_select_screen}
                     {==
                        {gamemode get is_tour_quickplay}
                        FALSE}}
                  {do
                     ($band
                        {tour band})
                     {meta_performer reset_songs}
                     {$band
                        set_gig
                        {$band gig}}}}
               #ifndef KIOSK_DEMO
               {challenge_mgr clear_current_challenge}
               #endif
               {ui
                  goto_screen
                  [cancel_screen]}
               {input_mgr set_limit kLimitUILeaderNoSwap}})
         ((kAction_Up kAction_Down)
            {do kDataUnhandled})
         (kAction_Start
            {if
               {&&
                  {== $action kAction_Start}
                  [allready]}
               {gamecfg updateshortsongmode}
               {$this start_loading}})})
   (FOCUS_MSG DO_FOCUSCLICK kDataUnhandled)
   (check_special_event
      {set $ret_val FALSE}
      {if
         {gamemode get is_tour}
         {do
            ($band
               {tour band})
            ($venue
               {$band venue})
            ($venue_name
               {if_else
                  $venue
                  {$venue get_name}
                  gNullStr})
            {cond
               ({&&
                     {challenge_mgr has_challenge}
                     {!
                        {challenge_mgr is_in_player}}}
                  {set
                     $cutscene
                     {switch
                        {challenge_mgr get_name}
                        (challenge_wrecknroll demolition_intro)
                        (challenge_ghostbusters shock_band)
                        (challenge_rocktopus rocktopus)
                        (challenge_ovalrace destruction_derby)
                        (challenge_farmrain rock_the_crop)
                        (challenge_dinochase dino_chase)
                        (challenge_asteroid stop_the_rock)
                        (challenge_castle castle)
                        (challenge_icebreaker rock_the_boat)
                        (challenge_ufobreakdown ufo_breakdown)
                        (TRUE '')}}
                  {if
                     {!= $cutscene ''}
                     {do
                        {cutscene_branch_panel setup $cutscene challenge_pre_songs_loading_screen 0 TRUE}
                        {ui goto_screen cutscene_branch_screen}
                        {set $ret_val TRUE}}})
               ({&&
                     {== $venue_name ven_wembrick_stadium}
                     {!
                        {gamemode get is_tour_quickplay}}}
                  {cutscene_branch_panel setup paranoia_and_the_pig pre_songs_loading_screen 0 FALSE}
                  {ui goto_screen cutscene_branch_screen}
                  {set $ret_val TRUE})
               ({&&
                     {== $venue_name ven_the_moon}
                     {!
                        {gamemode get is_tour_quickplay}}}
                  {cutscene_branch_panel setup moon_set_up pre_songs_loading_screen 0 FALSE}
                  {ui goto_screen cutscene_branch_screen}
                  {set $ret_val TRUE})
               ({&&
                     {== $venue_name ven_the_abyss}
                     {!
                        {gamemode get is_tour_quickplay}}}
                  {cutscene_branch_panel setup rock_lobster pre_songs_loading_screen 0 FALSE}
                  {ui goto_screen cutscene_branch_screen}
                  {set $ret_val TRUE})}}}
      {if
         $ret_val
         #ifdef HX_WII
         {if
            {gamemode get is_tour}
            {char_cache free_all_entourage}}
         #endif}
      $ret_val)
   #include ../config/song_overrides.dta
   (start_loading
      #ifdef KIOSK_DEMO
      {if_else
         {challenge_mgr has_challenge}
         {do
            {cutscene_branch_panel setup rocktopus challenge_pre_songs_loading_screen 0 TRUE}
            {ui goto_screen cutscene_branch_screen}}
         {unless
            {&&
               {gamemode get is_tour}
               {!
                  {gamemode get is_tour_quickplay}}
               {!
                  {challenge_mgr is_in_player}}
               {$this check_special_event $selected}}
            {if
               {==
                  {ui current_screen}
                  $this}
               {do
                  {song_select_panel set clear_setlist TRUE}
                  {generic_loading_panel set pre_game TRUE}
                  {generic_loading_panel
                     set
                     img
                     [load_img]}
                  {songs_loading_panel
                     set
                     img
                     [load_img]}
                  {ui goto_screen pre_songs_loading_screen}
                  #ifdef HX_WII
                  {if
                     {gamemode get is_tour}
                     {char_cache free_all_entourage}}
                  #endif}}}}
      #else
      {unless
         {&&
            {gamemode get is_tour}
            {!
               {gamemode get is_tour_quickplay}}
            {!
               {challenge_mgr is_in_player}}
            {$this check_special_event $selected}}
         {if
            {==
               {ui current_screen}
               $this}
            {do
               {song_select_panel set clear_setlist TRUE}
               {generic_loading_panel set pre_game TRUE}
               {generic_loading_panel
                  set
                  img
                  [load_img]}
               {songs_loading_panel
                  set
                  img
                  [load_img]}
               {ui goto_screen pre_songs_loading_screen}
               #ifdef HX_WII
               {if
                  {gamemode get is_tour}
                  {char_cache free_all_entourage}}
               #endif}}}
      #endif)
   (enter
      {gamecfg set_globalshortsongmode FALSE}
      {$this update_helpbar}
      {input_mgr set_limit kLimitSession}
      {$this
         set
         load_img
         {get_load_img}}
      kDataUnhandled))
{new
   MultiFocusScreen
   qp_seldiff_screen
   (panels meta postsong_sfx_panel movie_panel seldiff_panel seldiff_border_panel song_sync_panel)
   (back
      {if_else
         {&&
            {gamemode is_h2h_arrangement}
            {gamecfg has_participating_guitar_controller}}
         h2h_seltrack_screen
         {if_else
            {&&
               {modifier_mgr is_modifier_active mod_choose_venue}
               {!
                  {gamemode is_practice}}}
            qp_selvenue_screen
            song_select_screen}})
   SELDIFF_SCREEN_HANDLERS}