{func
   get_if_likeness
   {do
      ($queen_img
         "")
      ($retval
         "")
      {do
         ($rand_queen
            {random_int 0 2})
         {switch
            $rand_queen
            (0
               {set
                  $queen_img
                  "fusion/ui/textures/load_screens/celeb/UI_Loading_queen_nomip_keep.png"})
            (1
               {set
                  $queen_img
                  "fusion/ui/textures/load_screens/celeb/UI_Loading_Celeb_Queen_nomip_keep.png"})}}
      {if
         {==
            {meta_performer num_songs}
            1}
         {switch
            {meta_performer song_num 0}
            ("letsdance"
               {do
                  ($rand_bowie
                     {random_int 0 2})
                  {switch
                     $rand_bowie
                     (0
                        {set
                           $retval
                           "fusion/ui/textures/load_screens/celeb/UI_Loading_Bowie_nomip_keep.png"})
                     (1
                        {set
                           $retval
                           "fusion/ui/textures/load_screens/celeb/UI_Loading_Celeb_Bowie_nomip_keep.png"})}})
            ("shortandsweet"
               {do
                  ($rand_tap
                     {random_int 0 2})
                  {switch
                     $rand_tap
                     (0
                        {set
                           $retval
                           "fusion/ui/textures/load_screens/celeb/UI_Loading_Tap_nomip_keep.png"})
                     (1
                        {set
                           $retval
                           "fusion/ui/textures/load_screens/celeb/UI_Loading_Celeb_SpinalTap_nomip_keep.png"})}})
            ("song2"
               {set
                  $retval
                  "fusion/ui/textures/load_screens/celeb/UI_Loading_Celeb_Blur_nomip_keep.png"})
            ("thepassenger"
               {set
                  $retval
                  "fusion/ui/textures/load_screens/celeb/UI_Loading_Celeb_IggyPopFull_nomip_keep.png"})
            ("wewillrockyou1"
               {set $retval $queen_img})
            ("wearethechampions"
               {set $retval $queen_img})}}
      $retval}}
{func
   get_load_img
   {do
      ($free_play_img
         "")
      ($true_img
         "")
      ($likeness_img
         "")
      {do
         ($rand_free
            {random_int 0 17})
         {switch
            $rand_free
            (0
               {set
                  $free_play_img
                  "fusion/ui/textures/load_screens/free/UI_Loading_Fender_Group_nomip_keep.png"})
            (1
               {set
                  $free_play_img
                  "fusion/ui/textures/load_screens/free/UI_Loading_Fender_Jag_nomip_keep.png"})
            (2
               {set
                  $free_play_img
                  "fusion/ui/textures/load_screens/free/UI_Loading_Fender_Precision_Bass_nomip_keep.png"})
            (3
               {set
                  $free_play_img
                  "fusion/ui/textures/load_screens/free/UI_Loading_Fender_Strat_nomip_keep.png"})
            (4
               {set
                  $free_play_img
                  "fusion/ui/textures/load_screens/free/UI_Loading_Fender_Stratocaster_nomip_keep.png"})
            (5
               {set
                  $free_play_img
                  "fusion/ui/textures/load_screens/free/UI_Loading_Fender_Tele_J_nomip_keep.png"})
            (6
               {set
                  $free_play_img
                  "fusion/ui/textures/load_screens/free/UI_Loading_Fender_Telecaster_nomip_keep.png"})
            (7
               {set
                  $free_play_img
                  "fusion/ui/textures/load_screens/free/UI_Loading_Gretsch_Billybo_nomip_keep.png"})
            (8
               {set
                  $free_play_img
                  "fusion/ui/textures/load_screens/free/UI_Loading_Gretsch_Group_nomip_keep.png"})
            (9
               {set
                  $free_play_img
                  "fusion/ui/textures/load_screens/free/UI_Loading_Gretsh_Billy_Bo_nomip_keep.png"})
            (10
               {set
                  $free_play_img
                  "fusion/ui/textures/load_screens/free/UI_Loading_Gretsh_Corvette_J_nomip_keep.png"})
            (11
               {set
                  $free_play_img
                  "fusion/ui/textures/load_screens/free/UI_Loading_Gretsh_Duejet_J_nomip_keep.png"})
            (12
               {set
                  $free_play_img
                  "fusion/ui/textures/load_screens/free/UI_Loading_Gretsh_White_Falcon_nomip_keep.png"})
            (13
               {set
                  $free_play_img
                  "fusion/ui/textures/load_screens/free/UI_Loading_Jackson_Kelly_J_nomip_keep.png"})
            (14
               {set
                  $free_play_img
                  "fusion/ui/textures/load_screens/free/UI_Loading_Jackson_King_V_nomip_keep.png"})
            (15
               {set
                  $free_play_img
                  "fusion/ui/textures/load_screens/free/UI_Loading_Jackson_KingV_nomip_keep.png"})
            (16
               {set
                  $free_play_img
                  "fusion/ui/textures/load_screens/free/UI_Loading_Jackson_Warrior_nomip_keep.png"})}}
      {if_else
         {==
            {gamemode get is_practice}
            TRUE}
         {do
            {set
               $true_img
               "fusion/ui/textures/load_screens/UI_Loading_BG02_nomip_keep.png"}}
         {do
            {if_else
               {&&
                  {==
                     {gamemode get is_tour}
                     TRUE}
                  {==
                     {gamemode get is_tour_quickplay}
                     FALSE}}
               {do
                  ($veh_img
                     "")
                  ($veh_name
                     {{tour band}
                        vehicle_name})
                  ($rand_tour
                     {random_int 0 3})
                  {switch
                     $veh_name
                     (veh_camper_van
                        {set
                           $veh_img
                           "fusion/ui/textures/load_screens/veh/UI_Loading_Vehicle_CamperVan_nomip_keep.png"})
                     (veh_minibus
                        {set
                           $veh_img
                           "fusion/ui/textures/load_screens/veh/UI_Loading_Vehicle_minibus_nomip_keep.png"})
                     (veh_boat
                        {set
                           $veh_img
                           "fusion/ui/textures/load_screens/veh/UI_Loading_Vehicle_Boat_nomip_keep.png"})
                     (veh_helicopter
                        {set
                           $veh_img
                           "fusion/ui/textures/load_screens/veh/UI_Loading_Vehicle_helicopter_nomip_keep.png"})
                     (veh_tourbus
                        {set
                           $veh_img
                           "fusion/ui/textures/load_screens/veh/UI_Loading_Vehicle_tourbus_nomip_keep.png"})
                     (veh_hovercraft
                        {set
                           $veh_img
                           "fusion/ui/textures/load_screens/veh/UI_Loading_Vehicle_hovercraft_nomip_keep.png"})
                     (veh_submarine
                        {set
                           $veh_img
                           "fusion/ui/textures/load_screens/veh/UI_Loading_Vehicle_Sub_nomip_keep.png"})
                     (veh_private_jet
                        {set
                           $veh_img
                           "fusion/ui/textures/load_screens/veh/UI_Loading_Vehicle_jet_nomip_keep.png"})
                     (veh_teleporter
                        {set
                           $veh_img
                           "fusion/ui/textures/load_screens/veh/UI_Loading_Vehicle_teleporter_nomip_keep.png"})}
                  {switch
                     $rand_tour
                     (0
                        {set $true_img $free_play_img})
                     (1
                        {set $true_img $veh_img})
                     (2
                        {set $true_img $veh_img})}}
               {do
                  {set $true_img $free_play_img}}}
            {set
               $likeness_img
               {get_if_likeness}}
            {if
               {!=
                  $likeness_img
                  ""}
               {set $true_img $likeness_img}}}}
      $true_img}}
{func
   get_text_token
   {do
      ($token
         "")
      ($songname
         {meta_performer song})
      {if_else
         {&&
            {==
               {gamemode get is_tour}
               TRUE}
            {==
               {gamemode get is_tour_quickplay}
               FALSE}}
         {do
            {if_else
               {>
                  {{tour band}
                     stars}
                  50}
               {do
                  ($d
                     {random_int 0 4})
                  {switch
                     $d
                     (0
                        {set
                           $token
                           {localize
                              {random_elem
                                 [help_tokens]}}})
                     (1
                        {set
                           $token
                           {localize
                              {random_elem
                                 [important_tokens]}}})
                     (2
                        {set
                           $token
                           {localize
                              {random_elem
                                 [$songname]}}})
                     (3
                        {set
                           $token
                           {localize
                              {random_elem
                                 [lego_tokens]}}})}}
               {do
                  {if_else
                     {>
                        {{tour band}
                           stars}
                        20}
                     {do
                        ($d
                           {random_int 0 2})
                        {switch
                           $d
                           (0
                              {set
                                 $token
                                 {localize
                                    {random_elem
                                       [help_tokens]}}})
                           (1
                              {set
                                 $token
                                 {localize
                                    {random_elem
                                       [important_tokens]}}})}}
                     {do
                        {set
                           $token
                           {localize
                              {random_elem
                                 [important_tokens]}}}}}}}}
         {do
            #ifdef KIOSK_DEMO
            {set
               $token
               {localize loading_demo}}
            #else
            ($d
               {random_int 0 2})
            {switch
               $d
               (0
                  {set
                     $token
                     {localize
                        {random_elem
                           [$songname]}}})
               (1
                  {set
                     $token
                     {localize
                        {random_elem
                           [lego_tokens]}}})}
            #endif}}
      $token}}
{new
   TexLoadPanel
   post_game_loading_panel
   (file
      "../meta_loading.milo")
   (is_really_up FALSE)
   #include tokens.dta
   (load)
   (enter
      {autosave_push
         [next_screen]}
      {$this set is_really_up TRUE}
      {$this pick_new_hint}
      {$this set is_unloading FALSE})
   (exit_complete
      {if
         {==
            [is_unloading]
            FALSE}
         {$this set is_unloading TRUE}
         {$this set is_really_up FALSE}
         {$this unload}})
   (pick_new_hint
      #ifdef KIOSK_DEMO
      {{$this find Loading_Info.lbl}
         set
         text_token
         {localize loading_demo}}
      #else
      {if
         {==
            [is_really_up]
            TRUE}
         {do
            ($d
               {random_int 0 3})
            {switch
               $d
               (0
                  {{$this find Loading_Info.lbl}
                     set
                     text_token
                     {localize
                        {random_elem
                           [help_tokens]}}})
               (1
                  {{$this find Loading_Info.lbl}
                     set
                     text_token
                     {localize
                        {random_elem
                           [important_tokens]}}})
               (2
                  {{$this find Loading_Info.lbl}
                     set
                     text_token
                     {localize
                        {random_elem
                           [lego_tokens]}}})}
            #ifdef HX_XBOX
            {script_task
               kTaskUISeconds
               (script
                  {$this pick_new_hint})
               (once TRUE)
               (delay 15)}
            #endif}}
      #endif)}
{new
   UIScreen
   post_game_loading_screen
   (panels post_game_loading_panel)
   (enter
      {helpbar
         set_config
         ((min_height 0))})}
{new
   TexLoadPanel
   challenge_loading_panel
   (file
      "load_chal_ufobreakdown.milo")
   (load
      {do
         ($challenge
            {tour
               get_challenge_gig
               {challenge_mgr get_name}})
         ($img
            {$challenge get_img})
         {$this
            add_tex
            $img
            "Loading.mat"}})
   (enter
      {do
         ($challenge
            {tour
               get_challenge_gig
               {challenge_mgr get_name}})
         {ChalTitle.lbl
            set
            text_token
            {$challenge get_name}}
         {Instructions.lbl
            set
            text_token
            {$challenge get_description}}})}
{new
   TexLoadPanel
   generic_loading_panel
   (file
      "load_generic.milo")
   (is_really_up FALSE)
   (img '')
   (hint_text)
   (pre_game FALSE)
   #include tokens.dta
   (load
      {if
         {!=
            [img]
            ''}
         {$this
            add_tex
            [img]
            "Loading.mat"}
         {$this set img ''}})
   (enter
      {$this set is_really_up TRUE}
      {$this pick_new_hint})
   (exit_complete
      {$this set is_really_up FALSE}
      {$this set img ''}
      {if
         {==
            [pre_game]
            TRUE}
         {$this set pre_game FALSE}})
   (pick_new_hint
      #ifdef KIOSK_DEMO
      {$this set hint_text loading_demo}
      {{$this find Loading_Info.lbl}
         set
         text_token
         {localize
            [hint_text]}}
      #else
      {do
         ($songname
            {meta_performer song})
         {if
            {==
               [is_really_up]
               TRUE}
            {do
               {if_else
                  {&&
                     {==
                        [pre_game]
                        TRUE}
                     {==
                        {song_mgr is_download $songname}
                        0}}
                  {do
                     {$this
                        set
                        hint_text
                        {get_text_token}}}
                  {do
                     {if_else
                        {&&
                           {exists tour}
                           {tour band}}
                        {if_else
                           {==
                              {{tour band}
                                 shown_first_load_hint}
                              FALSE}
                           {$this set hint_text loading_important_help09}
                           {$this
                              set
                              hint_text
                              {random_elem
                                 [lego_tokens]}}}
                        {if_else
                           {==
                              {get_if_likeness}
                              ""}
                           {$this
                              set
                              hint_text
                              {random_elem
                                 [lego_tokens]}}
                           {$this set hint_text matchmaking_char_override}}}}}
               {{$this find Loading_Info.lbl}
                  set
                  text_token
                  {localize
                     [hint_text]}}
               #ifdef HX_XBOX
               {script_task
                  kTaskUISeconds
                  (script
                     {$this pick_new_hint})
                  (once TRUE)
                  (delay 15)}
               #endif}}}
      #endif)
   (block_event
      ($event)
      {!= $event content_file_read_failed})}
{new
   TexLoadPanel
   generic_red_loading_panel
   (file
      "../meta_loading.milo")
   (is_really_up FALSE)
   #include tokens.dta
   (load)
   (enter
      {$this set is_really_up TRUE}
      {$this pick_new_hint})
   (exit_complete
      {$this set is_really_up FALSE})
   (pick_new_hint
      #ifdef KIOSK_DEMO
      {{$this find Loading_Info.lbl}
         set
         text_token
         {localize loading_demo}}
      #else
      {if
         {==
            [is_really_up]
            TRUE}
         {do
            {{$this find Loading_Info.lbl}
               set
               text_token
               {localize
                  {random_elem
                     [lego_tokens]}}}
            #ifdef HX_XBOX
            {script_task
               kTaskUISeconds
               (script
                  {$this pick_new_hint})
               (once TRUE)
               (delay 15)}
            #endif}}
      #endif)}
{new
   TexLoadPanel
   songs_loading_panel
   (file
      "load_generic.milo")
   (is_really_up FALSE)
   (img '')
   #include tokens.dta
   (load
      {if
         {!=
            [img]
            ''}
         {$this
            add_tex
            [img]
            "Loading.mat"}
         {$this set img ''}})
   (enter
      {do
         {if_else
            {==
               {cutscene get_current_cutscene}
               ''}
            {ui
               goto_screen
               {gamemode get game_screen}}
            {ui goto_screen cutscene_screen}}
         {$this set is_really_up TRUE}
         {{$this find Loading_Info.lbl}
            set
            text_token
            {localize
               {generic_loading_panel get hint_text}}}
         #ifndef KIOSK_DEMO
         #ifdef HX_XBOX
         {script_task
            kTaskUISeconds
            (script
               {$this pick_new_hint})
            (once TRUE)
            (delay 9)}
         #endif
         #endif})
   (exit_complete
      {$this set is_really_up FALSE})
   (pick_new_hint
      {do
         ($songname
            {meta_performer song})
         {if
            {==
               [is_really_up]
               TRUE}
            {if_else
               {==
                  {song_mgr is_download $songname}
                  0}
               {Loading_Info.lbl
                  set
                  text_token
                  {get_text_token}}
               {Loading_Info.lbl
                  set
                  text_token
                  {localize
                     {random_elem
                        [lego_tokens]}}}}}})
   (is_loaded TRUE)
   (block_event
      ($event)
      {!= $event content_file_read_failed})}
{new
   TexLoadPanel
   challenge_songs_bg_panel
   (file
      "load_chal_ufobreakdown.milo")
   (load
      {do
         ($challenge
            {tour
               get_challenge_gig
               {challenge_mgr get_name}})
         ($img
            {$challenge get_img})
         {$this
            add_tex
            $img
            "Loading.mat"}})
   (enter
      {do
         ($challenge
            {tour
               get_challenge_gig
               {challenge_mgr get_name}})
         {ChalTitle.lbl
            set
            text_token
            {$challenge get_name}}
         {Instructions.lbl
            set
            text_token
            {$challenge get_description}}})}
{new
   TexLoadPanel
   challenge_songs_loading_panel
   (file
      "load_chal_ufobreakdown.milo")
   (load
      {do
         ($challenge
            {tour
               get_challenge_gig
               {challenge_mgr get_name}})
         ($img
            {$challenge get_img})
         {$this
            add_tex
            $img
            "Loading.mat"}})
   (is_really_up FALSE)
   (enter
      {do
         ($songname
            {meta_performer song})
         ($challenge
            {tour
               get_challenge_gig
               {challenge_mgr get_name}})
         {if_else
            {==
               {cutscene get_current_cutscene}
               ''}
            {ui
               goto_screen
               {gamemode get game_screen}}
            {ui goto_screen cutscene_screen}}
         {ChalTitle.lbl
            set
            text_token
            {$challenge get_name}}
         {Instructions.lbl
            set
            text_token
            {$challenge get_description}}
         {$this set is_really_up TRUE}})
   (exit_complete
      {$this set is_really_up FALSE})
   (is_loaded TRUE)
   (block_event
      ($event)
      {!= $event content_file_read_failed})}
{new
   UIScreen
   songs_loading_screen
   (panels char_loading_panel songs_loading_panel)
   (enter
      {helpbar
         set_config
         ((min_height 0))}
      {animatic_movie_panel unload})}
{new
   PreloadPanel
   preload_panel
   (content_name
      "")
   (corrupt FALSE)
   (enter
      #ifdef IGNORE_PRELOAD_OK
      {if_else
         {challenge_mgr has_challenge}
         {ui goto_screen challenge_real_pre_songs_loading_screen}
         {ui goto_screen real_pre_songs_loading_screen}}
      #else
      ;{if_else ;patch out preload so ugc works as is.
      ;   [preload_ok] ;notice harmonix actually has a macro for this option above? lol
         {if_else
            {challenge_mgr has_challenge}
            {ui goto_screen challenge_real_pre_songs_loading_screen}
            {ui goto_screen real_pre_songs_loading_screen}}
         ;{band_ui ;this checks if the content is "corrupt"
         ;   content_file_read_failed ;ugc is not corrupt
         ;   [content_name] ;so we just ignore all this
         ;   [corrupt]}
        ; }
      #endif)}
{new
   BandScreen
   pre_songs_loading_screen
   (panels generic_loading_panel preload_panel)
   (focus preload_panel)
   (helpbar
      ((min_height 0)))}
{new
   UIScreen
   challenge_pre_songs_loading_screen
   (panels challenge_loading_panel preload_panel)
   (focus preload_panel)
   (helpbar
      ((min_height 0)))}
{new
   UIScreen
   real_pre_songs_loading_screen
   (panels generic_loading_panel)
   #include ../../config/song_overrides.dta
   (enter
      {helpbar
         set_config
         ((min_height 0))}
      {animatic_movie_panel unload}
      {foreach_int
         $i
         0
         {user_mgr get_max_users}
         {do
            ($player_num
               {gamecfg get_player_num_from_slot_num $i})
            {if
               {!= $player_num -1}
               {unless
                  {gamecfg is_user_active $i}
                  {gamecfg set_player_slot_num $player_num -1}}}}}
      {if_else
         {&&
            {==
               {meta_performer num_songs}
               1}
            {'||'
               {!
                  {gamemode get is_tour}}
               {gamemode get is_tour_quickplay}}}
         {do
            ($likeness
               {get_likeness_group
                  {meta_performer song}})
            {if
               {!= $likeness kDataUnhandled}
               {gamecfg set_override_band $likeness}}}
         {if_else
            {&&
               {gamemode get is_tour}
               {{tour band}
                  playing_special_gig}}
            {do
               ($gig
                  {{tour band}
                     special_gig})
               ($likeness_gigs
                  (gig_lcr_special_03 gig_sf_special_02 gig_wnrb_special_02 gig_lcc_special_a gig_lcz_special_01 gig_spf_special_02))
               {if_else
                  {find_elem
                     $likeness_gigs
                     {$gig name}}
                  {gamecfg
                     set_override_band
                     {get_likeness_group
                        {meta_performer song}}}
                  {do
                     ($costume
                        {$gig get_costume})
                     {if
                        {!= $costume ''}
                        {gamecfg set_override_band $costume}}}}}
            {if
               {&&
                  {gamemode get is_tour}
                  {==
                     {meta_performer num_songs}
                     1}}
               {do
                  ($likeness
                     {get_likeness_group
                        {meta_performer song}})
                  {if
                     {!= $likeness kDataUnhandled}
                     {gamecfg set_override_band $likeness}}}}}}
      {ui goto_screen post_songs_loading_screen})}
{new
   UIScreen
   challenge_real_pre_songs_loading_screen
   (panels challenge_loading_panel)
   (enter
      {helpbar
         set_config
         ((min_height 0))}
      {animatic_movie_panel unload}
      {foreach_int
         $i
         0
         {user_mgr get_max_users}
         {do
            ($player_num
               {gamecfg get_player_num_from_slot_num $i})
            {if
               {!= $player_num -1}
               {unless
                  {gamecfg is_user_active $i}
                  {gamecfg set_player_slot_num $player_num -1}}}}}
      {ui goto_screen challenge_post_songs_loading_screen})}
{new
   UIScreen
   post_songs_loading_screen
   (panels char_loading_panel songs_loading_panel)
   (enter
      {helpbar
         set_config
         ((min_height 0))}
      {animatic_movie_panel unload}
      {do
         {if
            {garage_vehiclepanel get current_vehicle_sound}
            {synth
               stop
               {garage_vehiclepanel get current_vehicle_sound}}}})}
{new
   UIScreen
   challenge_post_songs_loading_screen
   (panels char_loading_panel challenge_songs_loading_panel)
   (enter
      {helpbar
         set_config
         ((min_height 0))}
      {animatic_movie_panel unload}
      {do
         {if
            {garage_vehiclepanel get current_vehicle_sound}
            {synth
               stop
               {garage_vehiclepanel get current_vehicle_sound}}}})}
{new
   MainScreen
   loading_tv_screen
   (panels generic_loading_panel)
   (enter
      {helpbar
         set_config
         ((min_height 0))}
      {ui goto_screen tv_screen})}
{new
   UIScreen
   loading_leaving_tv_screen
   (panels meta hubentourage_panel generic_red_loading_panel)
   (enter
      {helpbar
         set_config
         ((min_height 0))}
      {ui goto_screen hub_screen})}
{new
   UIScreen
   cutscene_loading_screen_1
   (panels generic_loading_panel)
   (enter
      {helpbar
         set_config
         ((min_height 0))}
      {ui goto_screen cutscene_loading_screen_2})}
{new
   UIScreen
   cutscene_loading_screen_2
   (panels generic_loading_panel char_loading_panel)
   (enter
      {helpbar
         set_config
         ((min_height 0))}
      {ui goto_screen cutscene_screen})}
{new
   UIScreen
   post_cutscene_loading_screen
   (panels post_game_loading_panel)
   (enter
      {helpbar
         set_config
         ((min_height 0))})}
{new
   MainScreen
   loading_hub_screen
   (panels meta hubentourage_panel generic_loading_panel)
   (enter
      {helpbar
         set_config
         ((min_height 0))}
      {ui goto_screen hub_screen})}
{new
   MainScreen
   autosave_loading_hub_screen
   (panels meta hubentourage_panel generic_loading_panel)
   (enter
      {helpbar
         set_config
         ((min_height 0))}
      {autosave_push hub_screen})}
{new
   MainScreen
   loading_hub_screen_nometa
   (panels generic_loading_panel)
   (enter
      {helpbar
         set_config
         ((min_height 0))}
      {ui goto_screen hub_screen})}
{new
   MainScreen
   loading_hub_screen_noentourage
   (panels meta generic_loading_panel)
   (enter
      {helpbar
         set_config
         ((min_height 0))}
      {ui goto_screen hub_screen})}
{new
   MainScreen
   loading_garage_screen
   (panels meta hubentourage_panel generic_loading_panel)
   (enter
      {helpbar
         set_config
         ((min_height 0))}
      {ui goto_screen garage_vehiclescreen})}
{new
   MainScreen
   loading_office_screen
   (panels meta hubentourage_panel generic_loading_panel)
   (enter
      {helpbar
         set_config
         ((min_height 0))}
      {ui goto_screen office_screen})}
{new
   MainScreen
   loading_shop_screen
   (panels meta hubentourage_panel generic_loading_panel)
   (enter
      {set $char.edit_mode TRUE}
      {helpbar
         set_config
         ((min_height 0))}
      {ui goto_screen shop_screen})}
{new
   MainScreen
   loading_shopgroup_screen
   (panels meta hubentourage_panel generic_loading_panel)
   (enter
      {helpbar
         set_config
         ((min_height 0))}
      {ui goto_screen shop_choose_group_screen})}
{new
   MainScreen
   loading_shop_to_shopgroup_screen
   (panels meta hubentourage_panel shop_char_panel generic_loading_panel)
   (enter
      {helpbar
         set_config
         ((min_height 0))}
      {ui goto_screen shop_choose_group_screen}
      {shop_char_panel do_finalise}
      {shop_char_panel set_edit_group 3})}
{new
   MainScreen
   loading_shopgroup_to_shop_screen
   (panels meta hubentourage_panel shop_char_panel generic_loading_panel)
   (edit_group none)
   (enter
      {set $char.edit_mode TRUE}
      {helpbar
         set_config
         ((min_height 0))}
      {shop_char_panel
         set_edit_group
         [edit_group]}
      {ui goto_screen shop_screen})}
{new
   MainScreen
   loading_arcade_screen
   (panels generic_loading_panel)
   (enter
      {helpbar
         set_config
         ((min_height 0))}
      {ui goto_screen arcade_screen})}
{new
   MainScreen
   loading_jukebox_screen
   (panels generic_loading_panel)
   (enter
      {helpbar
         set_config
         ((min_height 0))}
      {ui goto_screen jukebox_screen})}
{new
   MainScreen
   loading_main_screen
   (panels meta generic_loading_panel)
   (enter
      {helpbar
         set_config
         ((min_height 0))}
      {ui goto_screen main_screen})}
{new
   MainScreen
   loading_stage_screen
   (panels meta generic_loading_panel)
   (enter
      {helpbar
         set_config
         ((min_height 0))}
      {ui goto_screen stage_screen})}
{new
   UIScreen
   loading_cutscene_screen
   (panels generic_loading_panel)
   (enter
      {helpbar
         set_config
         ((min_height 0))}
      {ui goto_screen test_loading_screen})}
{new
   MainScreen
   loading_qp_difficulty_screen
   (panels generic_loading_panel)
   (enter
      {helpbar
         set_config
         ((min_height 0))}
      {ui goto_screen qp_difficulty_screen})}
{new
   UIScreen
   generic_loading_screen
   (panels generic_loading_panel)
   (exit_screen '')
   (enter
      {helpbar
         set_config
         ((min_height 0))}
      {ui
         goto_screen
         [exit_screen]})}
{new
   TexLoadPanel
   language_loading_panel
   (file
      "../language_loading.milo")
   (is_really_up FALSE)
   (img '')
   (load)
   (enter
      {$this set is_really_up TRUE})
   (exit_complete
      {$this set is_really_up FALSE})
   (is_loaded TRUE)}
{new
   UIScreen
   loading_language_eng_screen
   (panels language_loading_panel)
   (enter
      {options_language_panel unload}
      {options_background_panel unload}
      {meta unload}
      {movie_panel unload}
      {main_menu_artwork unload}
      {helpbar
         set_config
         ((min_height 0))})
   (exit
      {profile_mgr set_language eng})
   (poll
      {ui goto_screen loading_language_exit_screen})}
{new
   UIScreen
   loading_language_exit_screen
   (panels language_loading_panel)
   (enter
      {ui goto_screen main_screen})}
{new
   UIScreen
   loading_language_fre_screen
   (panels language_loading_panel)
   (enter
      {options_language_panel unload}
      {options_background_panel unload}
      {meta unload}
      {movie_panel unload}
      {main_menu_artwork unload}
      {helpbar
         set_config
         ((min_height 0))})
   (exit
      {profile_mgr set_language fre})
   (poll
      {ui goto_screen loading_language_exit_screen})}
{new
   UIScreen
   loading_language_deu_screen
   (panels language_loading_panel)
   (enter
      {options_language_panel unload}
      {options_background_panel unload}
      {meta unload}
      {movie_panel unload}
      {main_menu_artwork unload}
      {helpbar
         set_config
         ((min_height 0))})
   (exit
      {profile_mgr set_language deu})
   (poll
      {ui goto_screen loading_language_exit_screen})}
{new
   UIScreen
   loading_language_esp_screen
   (panels language_loading_panel)
   (enter
      {options_language_panel unload}
      {options_background_panel unload}
      {meta unload}
      {movie_panel unload}
      {main_menu_artwork unload}
      {helpbar
         set_config
         ((min_height 0))})
   (exit
      {profile_mgr set_language esp})
   (poll
      {ui goto_screen loading_language_exit_screen})}
{new
   UIScreen
   loading_language_ita_screen
   (panels language_loading_panel)
   (enter
      {options_language_panel unload}
      {options_background_panel unload}
      {meta unload}
      {movie_panel unload}
      {main_menu_artwork unload}
      {helpbar
         set_config
         ((min_height 0))})
   (exit
      {profile_mgr set_language ita})
   (poll
      {ui goto_screen loading_language_exit_screen})}
{new
   UIScreen
   loading_language_dan_screen
   (panels language_loading_panel)
   (enter
      {options_language_panel unload}
      {options_background_panel unload}
      {meta unload}
      {movie_panel unload}
      {main_menu_artwork unload}
      {helpbar
         set_config
         ((min_height 0))})
   (exit
      {profile_mgr set_language dan})
   (poll
      {ui goto_screen loading_language_exit_screen})}
{new
   UIScreen
   loading_language_usa_screen
   (panels language_loading_panel)
   (enter
      {options_language_panel unload}
      {options_background_panel unload}
      {meta unload}
      {movie_panel unload}
      {main_menu_artwork unload}
      {helpbar
         set_config
         ((min_height 0))})
   (exit
      {profile_mgr set_language usa})
   (poll
      {ui goto_screen loading_language_exit_screen})}
{new
   UIScreen
   loading_language_usf_screen
   (panels language_loading_panel)
   (enter
      {options_language_panel unload}
      {options_background_panel unload}
      {meta unload}
      {movie_panel unload}
      {main_menu_artwork unload}
      {helpbar
         set_config
         ((min_height 0))})
   (exit
      {profile_mgr set_language usf})
   (poll
      {ui goto_screen loading_language_exit_screen})}
{new
   UIScreen
   loading_language_use_screen
   (panels language_loading_panel)
   (enter
      {options_language_panel unload}
      {options_background_panel unload}
      {meta unload}
      {movie_panel unload}
      {main_menu_artwork unload}
      {helpbar
         set_config
         ((min_height 0))})
   (exit
      {profile_mgr set_language use})
   (poll
      {ui goto_screen loading_language_exit_screen})}