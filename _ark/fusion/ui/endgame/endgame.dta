#include endgame_helpers.dta
#define ENDGAME_PANEL_COMMON_ENTER
({input_mgr set_limit kLimitSession}
   {do
      ($num_players
         {user_mgr get_num_participants})
      ($slot_index 0)
      {set
         [best_percentage]
         0}
      {foreach_int
         $i
         0
         4
         {do
            ($user
               {user_mgr get_user_from_slot $i})
            {if
               $user
               {do
                  ($player
                     {$user player})
                  ($current_percentage
                     {int
                        {'*'
                           100
                           {$player notes_hit_fraction}}})
                  {'++' $slot_index}
                  {if
                     {>
                        $current_percentage
                        [best_percentage]}
                     {set
                        [best_percentage]
                        $current_percentage}}
                  {if
                     {== $slot_index $num_players}
                     {set $i 4}}}}}}}
   {crowd_audio force_excitement kExcitementPeak})
#define ENDGAME_PANEL_COMMON_EXIT
({unless
      {gamemode get ranked}
      {input_mgr set_limit kLimitSessionLeader}})
#define ENDGAME_PANEL_PERCENTAGE_HANDLERS
((anim_tasks
      ())
   (clear_anim_tasks
      {foreach
         $task
         [anim_tasks]
         {if
            $task
            {taskmgr clear_one_task kTaskUISeconds $task}}}
      {resize
         [anim_tasks]
         0})
   (position_players
      ($slots $num_players)
      {do
         ($groups
            (Group.grp Group01.grp Group02.grp Group03.grp))
         ($bgs
            (InfoBG01.mesh InfoBG02.mesh InfoBG03.mesh InfoBG04.mesh))
         ($playerPanels
            (player0 player1 player2 player3))
         ($slot_index 0)
         {foreach $playerPanel $playerPanels}
         {foreach
            $bg
            $bgs
            {$bg set_showing FALSE}}
         {foreach_int
            $i
            0
            4
            {do
               ($user
                  {user_mgr get_user_from_slot $i})
               {if
                  $user
                  {do
                     ($user_num
                        {$user get_user_num})
                     ($player
                        {$user player})
                     {{elem $slots $slot_index}
                        copy_local_to
                        ({elem $groups $i})}
                     {'++' $slot_index}
                     {{elem $bgs $i}
                        set_showing
                        TRUE}
                     {switch
                        $num_players
                        (1
                           {OnePlayer_True.trig trigger})
                        {OnePlayer_False.trig trigger}}
                     {if
                        {== $slot_index $num_players}
                        {set $i 4}}}}}}})
   (trigger_anims
      ($num_players $stage)
      {do
         ($ftson
            (Player01_FlameOn.trig Player02_FlameOn.trig Player03_FlameOn.trig Player04_FlameOn.trig))
         ($ptson
            (Player01_PercentOn.trig Player02_PercentOn.trig Player03_PercentOn.trig Player04_PercentOn.trig))
         ($flwson
            (Player01_FlowerOn.trig Player02_FlowerOn.trig Player03_FlowerOn.trig Player04_FlowerOn.trig))
         ($playerPanels
            (player0 player1 player2 player3))
         ($slot_index 0)
         ($first TRUE)
         {foreach_int
            $i
            0
            4
            {do
               ($user
                  {user_mgr get_user_from_slot $i})
               {if
                  $user
                  {do
                     ($user_num
                        {$user get_user_num})
                     ($player
                        {$user player})
                     {'++' $slot_index}
                     {switch
                        $stage
                        (1
                           {do
                              {{{elem $playerPanels $i}
                                    find
                                    Info_On_01.trig}
                                 trigger}
                              {if
                                 $first
                                 {synth play standard_swoosh.cue}}})
                        (2
                           {do
                              {{{elem $playerPanels $i}
                                    find
                                    Info_On_02.trig}
                                 trigger}
                              {if
                                 $first
                                 {synth play standard_swoosh.cue}}})
                        (3
                           {do
                              {{{elem $playerPanels $i}
                                    find
                                    Info_On_03.trig}
                                 trigger}
                              {if
                                 $first
                                 {if_else
                                    {==
                                       [best_percentage]
                                       100}
                                    {do
                                       {synth play 100pcent_swoosh.cue}}
                                    {if_else
                                       {>=
                                          [best_percentage]
                                          90}
                                       {synth play 90pcent_swoosh.cue}
                                       {synth play standard_swoosh.cue}}}}})
                        (4
                           {if
                              {<=
                                 90
                                 {int
                                    {'*'
                                       100
                                       {$player notes_hit_fraction}}}}
                              {{elem $ptson $i}
                                 trigger}
                              {{elem $ftson $i}
                                 trigger}}
                           {if
                              {==
                                 100
                                 {int
                                    {'*'
                                       100
                                       {$player notes_hit_fraction}}}}
                              {{elem $flwson $i}
                                 trigger}})
                        (5
                           {{{elem $playerPanels $i}
                                 find
                                 Info_PressGreen.trig}
                              trigger})}
                     {if
                        {== $slot_index $num_players}
                        {set $i 4}}}
                  {set $first FALSE}}}}}))
#define ENDGAME_PANEL_PERCENTAGE_ENTER
({do
      ($num_players
         {user_mgr get_num_participants})
      {switch
         $num_players
         (1
            {$this
               position_players
               (3_2.trans)
               $num_players})
         (2
            {$this
               position_players
               (2_1.trans 2_2.trans)
               $num_players})
         (3
            {$this
               position_players
               (3_1.trans 3_2.trans 3_3.trans)
               $num_players})}
      {resize
         [anim_tasks]
         4}
      {set_elem
         [anim_tasks]
         0
         {script_task
            kTaskUISeconds
            (script
               {$this trigger_anims $num_players 1}
               {set_elem
                  {$this get anim_tasks}
                  0
                  ''})
            (once TRUE)
            (delay 1)}}
      {set_elem
         [anim_tasks]
         1
         {script_task
            kTaskUISeconds
            (script
               {$this trigger_anims $num_players 2}
               {set_elem
                  {$this get anim_tasks}
                  1
                  ''})
            (once TRUE)
            (delay 2)}}
      {set_elem
         [anim_tasks]
         2
         {script_task
            kTaskUISeconds
            (script
               {$this trigger_anims $num_players 3}
               {set_elem
                  {$this get anim_tasks}
                  2
                  ''})
            (once TRUE)
            (delay 3)}}
      {set_elem
         [anim_tasks]
         3
         {script_task
            kTaskUISeconds
            (script
               {$this trigger_anims $num_players 4}
               {set_elem
                  {$this get anim_tasks}
                  3
                  ''})
            (once TRUE)
            (delay 3)}}
      {if_else
         {gamecfg get_globalshortsongmode}
         {percentage_short_song_on.lbl set_showing TRUE}
         {percentage_short_song_on.lbl set_showing FALSE}}
      {if_else
         {beatmatch is_kick_autoplay}
         {percentage_auto_kick_on.lbl set_showing TRUE}
         {percentage_auto_kick_on.lbl set_showing FALSE}}})
{new
   UIPanel
   coop_endgame_panel
   (file
      "coop_endgame.milo")
   ENDGAME_PANEL_HANDLERS
   ENDGAME_PANEL_PERCENTAGE_HANDLERS
   (enter
      {platform_mgr set_notify_ui_location kOSNotifyBottomCenter}
      {$this set_results}
      #ifndef HX_OG
      {$this submit_achievements}
      #endif
      ENDGAME_PANEL_COMMON_ENTER
      {songs.lbl set_showing FALSE}
      ENDGAME_PANEL_PERCENTAGE_ENTER
      {meta_performer complete_gig})
   (BUTTON_DOWN_MSG
      {do
         {$this clear_anim_tasks}
         {$this trigger_anims $num_players 5}
         {switch
            $action
            (kAction_Confirm
               {synth play button_select}
               #ifndef KIOSK_DEMO
               {if_else
                  {gamemode get is_tour}
                  {cond
                     ({gamemode get is_tour_quickplay}
                        {ui goto_screen complete_screen})
                     ({&&
                           {challenge_mgr has_challenge}
                           {challenge_mgr is_in_player}}
                        {$this do_quickplay_exit arcade_screen})
                     (TRUE
                        {ui goto_screen tour_world_complete_screen})}
                  {do
                     {ui goto_screen complete_screen}}}
               #else
               {sell_panel set should_quit FALSE}
               {sell_panel set exit_screen meta_loading_main_screen}
               {game demo_clear_prefabs}
               {ui reset_screen sell_screen}
               #endif)
            kDataUnhandled}})
   (FOCUS_MSG DO_FOCUSCLICK kDataUnhandled)
   (do_quickplay_exit
      ($exit_screen)
      {if
         {!=
            {ui bottom_screen}
            {ui current_screen}}
         {{ui bottom_screen}
            set_showing
            FALSE}}
      {post_game_loading_panel load TRUE}
      {post_game_loading_panel set next_screen $exit_screen}
      {ui pop_screen post_game_loading_screen})
   (exit
      ENDGAME_PANEL_COMMON_EXIT
      {platform_mgr set_notify_ui_location kOSNotifyTopRight})}
{new
   BandScreen
   coop_endgame_screen
   (panels endgame_background_animated_panel coop_endgame_panel)
   (helpbar
      ((confirm helpbar_continue)))
   (focus coop_endgame_panel)
   (more_details_screen coop_details_endgame_screen)
   (enter
      {endgame_background_panel show_overlay})}
#define NEXTSONG_SCREEN_HANDLERS
((helpbar
      ((min_height 0)))
   (show_event FALSE))
{new
   BandScreen
   nextsong_screen
   NEXTSONG_SCREEN_HANDLERS
   (enter
      {ui
         pop_screen
         {gamemode get nextstats_screen}})}
{new
   NextSongPanel
   nextsong_panel
   (file
      "coop_endgame.milo")
   (min_time 5.0)
   ENDGAME_PANEL_HANDLERS
   ENDGAME_PANEL_PERCENTAGE_HANDLERS
   (enter
      {$this set_results}
      #ifndef HX_WII
      {$this submit_achievements}
      #endif
      {songs.lbl set_showing TRUE}
      {songs.lbl
         set_localized
         {sprintf
            {localize tour_event_songs}
            {meta_performer num_completed}
            {meta_performer num_songs}}}
      ENDGAME_PANEL_PERCENTAGE_ENTER
      {ui
         goto_screen
         {gamemode get preload_nextsong_screen}})
   (exit
      {$this clear_anim_tasks})}
{new
   BandScreen
   nextstats_screen
   (panels game world_panel coop_track_panel nextsong_panel)
   NEXTSONG_SCREEN_HANDLERS}
{new
   BandScreen
   jukebox_nextstats_screen
   (panels game world_panel nextsong_panel)
   NEXTSONG_SCREEN_HANDLERS
   (enter
      {{nextsong_panel find jukebox_hide.trig}
         trigger})}
{new
   PreloadPanel
   preload_nextsong_panel
   (content_name
      "")
   (corrupt FALSE)
   (enter
      {if_else
         [preload_ok]
         {ui
            goto_screen
            {gamemode get load_nextsong_screen}}
         {band_ui
            content_file_read_failed
            [content_name]
            [corrupt]}})}
{new
   GameTimePanel
   game_time_panel
   (load
      {game set multi_event TRUE})}
{new
   BandScreen
   preload_nextsong_screen
   (panels game game_time_panel world_panel coop_track_panel nextsong_panel preload_nextsong_panel)
   (focus preload_nextsong_panel)
   NEXTSONG_SCREEN_HANDLERS}
{new
   BandScreen
   jukebox_preload_nextsong_screen
   (panels game game_time_panel world_panel nextsong_panel preload_nextsong_panel)
   (focus preload_nextsong_panel)
   NEXTSONG_SCREEN_HANDLERS}
{new
   BandScreen
   load_nextsong_screen
   (panels game_time_panel world_panel coop_track_panel nextsong_panel)
   NEXTSONG_SCREEN_HANDLERS
   (TRANSITION_COMPLETE_MSG
      {song_mgr
         add_recent_song
         {meta_performer song}}
      {coop_track_panel set_paused TRUE}
      {ui
         goto_screen
         {gamemode get game_screen}})}
{new
   BandScreen
   jukebox_load_nextsong_screen
   (panels game_time_panel world_panel nextsong_panel)
   NEXTSONG_SCREEN_HANDLERS
   (TRANSITION_COMPLETE_MSG
      {song_mgr
         add_recent_song
         {meta_performer song}}
      {ui
         goto_screen
         {gamemode get game_screen}})}
#define H2H_END_GAME_PANEL_HANDLERS
((focus continue.btn)
   ENDGAME_PANEL_HANDLERS
   (block_event
      ($event)
      {== $event disband})
   (enter
      {platform_mgr set_notify_ui_location kOSNotifyBottomCenter}
      {$this set_results}
      #ifndef HX_WII
      {$this submit_achievements}
      #endif
      ENDGAME_PANEL_COMMON_ENTER
      {if
         {gamemode get ranked}
         {band_ui set handle_remote_player_left FALSE}})
   (update_true_skill
      ($skill0 $skill1)
      {rank0.lbl set_localized $skill0}
      {rank1.lbl set_localized $skill1}
      {rank0_text.lbl set_showing TRUE}
      {rank1_text.lbl set_showing TRUE})
   (exit
      ENDGAME_PANEL_COMMON_EXIT
      {platform_mgr set_notify_ui_location kOSNotifyTopRight}))
{new
   UIPanel
   lego_challenge_endgame_panel
   (file
      "lego_challenge_endgame.milo")
   (focus quit.btn)
   (SELECT_MSG
      {switch
         $component
         (quit.btn
            {post_game_loading_panel load TRUE}
            {post_game_loading_panel set next_screen main_screen}
            {ui pop_screen post_game_loading_screen})})}
{new
   BandScreen
   lego_challenge_endgame_screen
   (panels lego_challenge_endgame_panel)}